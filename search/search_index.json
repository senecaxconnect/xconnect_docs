{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation Repository This site will serve as a centralized location for all documentation related to the xConnect Platform. Overview Features Platform and Architecture Agent Gateway Web Dashboard Installation and Configuration Quick Start Guide Gateway Setup - Turnkey Appliance Gateway Setup - Virtual/Software/Docker Genetec Integration Setup Technical Documentation Agent Gateway Web Dashboard Usage Guide Dashboards Bookmarks User Types Manage Customers Manage Users Manage Gateways Manage Devices Event Configurations Email Profiles 3 rd Party Connectors Event Log Support Sales Technical Support / RMA xConnect Application Support Release Notes xConnect Release Notes","title":"Home"},{"location":"#overview","text":"Features Platform and Architecture Agent Gateway Web Dashboard","title":"Overview"},{"location":"#installation-and-configuration","text":"Quick Start Guide Gateway Setup - Turnkey Appliance Gateway Setup - Virtual/Software/Docker Genetec Integration Setup","title":"Installation and Configuration"},{"location":"#technical-documentation","text":"Agent Gateway Web Dashboard","title":"Technical Documentation"},{"location":"#usage-guide","text":"Dashboards Bookmarks User Types Manage Customers Manage Users Manage Gateways Manage Devices Event Configurations Email Profiles 3 rd Party Connectors Event Log","title":"Usage Guide"},{"location":"#support","text":"Sales Technical Support / RMA xConnect Application Support","title":"Support"},{"location":"#release-notes","text":"xConnect Release Notes","title":"Release Notes"},{"location":"API_RequestSigning/","text":"API Request Signing Note **The following applies to the xConnect and Asset Management APIs https://assetmgmt-api.senecaxconnect.com https://api.senecaxconnect.com All HTTP API requests into the xConnect Platform must be signed by the client application and validated by the Asset Management/xConnect API Platform to ensure they come from authenticated clients. There are 2 important pieces of information - apiKey and secretKey that can be obtained from the cloud portal and embedded into the client application for signing requests. It's recommended that these keys are stored encrypted on the client side. For example in this document, we use the following keys apiKey 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 secretKey ARAzUzRzekFwRTNACBQYUx89LlZyImhKFVloHUVMDw8EGRxxSCckFgdFPysAAWJCLDgMdkstZzw3GGVqNHxXcno5Iz54LRBSKy0TaCBwNndkfQNdD38KAA== The client application needs to process the API request details using 5 steps explained below. The input parameters include such information as the URL, HTTP method, query string, JSON payload, HTTP headers, the security keys, etc. The computation outcome is a signature value which is included in the HTTP header. Step 1: Create a Canonical Request for signing The first step is to build a string representation of your request in a pre-defined format. Java canonicalRequest = httpRequestMethod + '\\n' + canonicalURI + '\\n' + canonicalQueryString + '\\n' + hexEncode ( hash ( payload )); Python hexEncode = hashlib . sha256 ( body_payload . encode ( 'utf-8' )) . hexdigest () if url_query_params != '' : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + query_params_to_encrypt + ' \\n ' + hexEncode else : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + hexEncode httpRequestMethod Put one of the following methods in a line by itself - GET, POST, PUT, PATCH POST canonicalURI The canonical URI is the URI-encoded version of the absolute path component of the URI, which is everything in the URI from the HTTP host to the question mark character (\"?\") that begins the query string parameters (if any). /api/v1/kronos/gateways canonicalQueryString Create each line containing a name/value pair in the format name=value. Name field is converted to lowercase and URL-encoded. Sort all the lines in ascending order Example QueryString: lastName=Doe&firstName=Jane&Age=30 age=30 firstname=Jane lastname=Doe hexEncode(hash(payload)) The payload (if any) is most likely in JSON format. If there's no payload, use an empty string Hash the payload content with SHA-256 Hex-encode the hash value Convert the hex-encoded value to lowercase Example of an empty payload: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 Combining all of the results above produces the following string: POST /api/v1/kronos/gateways age=30 firstname=Jane lastname=Doe e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 Finally, hash this computed canonical request, hex-encode and lowercase it. This is the result of step 1. 5a2d3589ffb15fab720069fbd26fd8e8311a1c7047e5899608faff450df6d7dc Step 2: Create the string to sign Java stringtoSign = hashedCanonicalRequest + '\\n' + apiKey + '\\n' + requestTimestamp + '\\n' + apiversion ; hashedCanonicalRequest This is the result of step 1 5a2d3589ffb15fab720069fbd26fd8e8311a1c7047e5899608faff450df6d7dc apiKey Provided apiKey from xConnect team ( support@senecaxconnect.com ) 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 requestTimestamp Current UTC time in ISO-8601 format - YYYY-MM-DDThh\ud83c\uddf2\ud83c\uddf2s.sssZ 2016-04-12T14:28:36.218Z apiVersion Version is 1 1 Combining all of the results above produces the following string. This is the result of step 2. 5a2d3589ffb15fab720069fbd26fd8e8311a1c7047e5899608faff450df6d7dc 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 2016-04-12T14:28:36.218Z 1 Step 3: Create the signing key In this step we're going to use the HMAC-SHA256 algorithm a few times to generate the signing key. In the pseudocode, it'll be shown as hmacSha256(key, data). Note the order of the input parameters because if you're using some third-party library for this function, the order of the input parameters might be reversed. The output of this function is in binary, hence note the hex-encode function being used below Java signingKey = secretKey; signingKey = hexEncode(hmacSha256(apiKey, signingKey)); signingKey = hexEncode(hmacSha256(requestTimestamp, signingKey)); signingKey = hexEncode(hmacSha256(apiVersion, signingKey)); secretKey Provided secretKey from Kronos portal apiKey Provided apiKey from Arrow Connect portal requestTimestamp Must be the same value as in step 2 apiVersion Must be the same value as in step 2 For the example in this guide, here's the output of this step. This is the result of step 3 signingKey = ARAzUzRzekFwRTNACBQYUx89LlZyImhKFVloHUVMDw8EGRxxSCckFgdFPysAAWJCLDgMdkstZzw3GGVqNHxXcno5Iz54LRBSKy0TaCBwNndkfQNdD38KAA== signingKey = 3c6e85f6a719e5b8bd77fde0cbdbe19d947f38451afbc8ef6e49a083d86a9c54 signingKey = 3223bf9bc2d2180046cc40c2e1ed6f9d08261a6c4a394b23c5311e83633a8ef7 signingKey = d0d1518fc5290c22f1444d46d9c08dd03cc33c6fdad8bbcd57be65b1e2b0b493 Step 4: Create the final signature The signature is computed by signing the result from step 2 and step 3 Java signature = hexEncode(hmacSha256(signingKey, stringToSign) signingKey Result of step 3 stringToSign Result of step 2 Result of step 4 is below 28c3ab6cc82294b61e9b2855b428090e474fd1e066c4da63f9715bd2204df553 Step 5: Add required headers to request and submit x-arrow-apikey: Provided apiKey x-arrow-date: requestTimestamp from step 2 x-arrow-version: apiVersion from step 2 x-arrow-signature: final signature from step 4 x-arrow-apikey: 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 x-arrow-date: 2016-04-12T14:28:36.218Z x-arrow-version: 1 x-arrow-signature: 28c3ab6cc82294b61e9b2855b428090e474fd1e066c4da63f9715bd2204df553 Complete API Request Example Note **The Java example simply generates the signed token. You must use the signature within a tool such as Postman to perform the full request. Java public void generateSignedRequestToken () { String API_KEY = \"Your_Raw_API_key\" ; String SECRET_KEY = \"Your_Raw_Secret_key\" ; String apiMethodUri = \"/api/v1/kronos/devices\" ; String timestamp = Instant . now (). toString (); String httpRequestMethod = \"GET\" ; List < String > uriParameters = new ArrayList <> (); HashMap < String , String > uriParametersMap = new HashMap <> (); String signature = \"\" ; try { // region Specify query parameters here uriParametersMap . put ( \"_page\" , \"0\" ); uriParametersMap . put ( \"_size\" , \"100\" ); // endregion for ( Map . Entry < String , String > entry : uriParametersMap . entrySet ()) { String name = entry . getKey (); String value = entry . getValue (); try { uriParameters . add ( String . format ( \"%s=%s\" , URLEncoder . encode ( name . toLowerCase (), StandardCharsets . UTF_8 . toString ()), AcsUtils . trimToEmpty ( value ))); } catch ( Exception e ) { // ignore } } // region Create canonical request StringBuilder builder = new StringBuilder (); builder . append ( httpRequestMethod ). append ( '\\n' ); builder . append ( apiMethodUri ). append ( '\\n' ); // append parameters if ( uriParameters . size () > 0 ) { Collections . sort ( uriParameters ); uriParameters . forEach ( p -> builder . append ( p ). append ( '\\n' )); } builder . append ( sha256Hex ( \"\" )); String canonicalRequest = builder . toString (); // endregion // region Sign the string StringBuilder stringToSign = new StringBuilder (); stringToSign . append ( sha256Hex ( canonicalRequest )). append ( '\\n' ); stringToSign . append ( API_KEY ). append ( '\\n' ); stringToSign . append ( timestamp ). append ( '\\n' ); stringToSign . append ( \"1\" ); signature = hmacSha256Hex ( hmacSha256Hex ( \"1\" , hmacSha256Hex ( timestamp , hmacSha256Hex ( API_KEY , SECRET_KEY ))), stringToSign . toString ()); } catch ( Exception e ) { } System . out . print ( \"Signed auth token = \" + signature ); } public static String hmacSha256Hex ( String key , String data ) { try { SecretKeySpec signingKey = new SecretKeySpec ( key . getBytes ( StandardCharsets . UTF_8 ), \"HmacSha256\" ); Mac mac = Mac . getInstance ( \"HmacSha256\" ); mac . init ( signingKey ); return printHex ( mac . doFinal ( data . getBytes ( StandardCharsets . UTF_8 ))); } catch ( Exception e ) { throw new AcsRuntimeException ( \"error while calculating: \" + \"HmacSha256\" , e ); } } public static String sha256Hex ( String data ) { try { return printHex ( MessageDigest . getInstance ( \"SHA-256\" ). digest ( data . getBytes ( StandardCharsets . UTF_8 ))); } catch ( Exception e ) { throw new AcsRuntimeException ( \"error while calculating: \" + \"SHA-256\" , e ); } } public static String printHex ( byte [] data ) { return DatatypeConverter . printHexBinary ( data ). toLowerCase (); } Python # -*- coding: utf-8 -*- import datetime import hashlib import hmac import json import requests import urllib.parse dir ( hashlib ) # Base URL and api method URI here: base_url = 'https://assetmgmt-api.senecaxconnect.com' api_method_uri = '/api/v1/kronos/telemetries/devices/ {deviceHid} /latest' # Put API key and Secret Keys (RAW) here: # Contact support@senecaxconnect.com for this information. application_hid = \"your_applicationhid_goes_here\" apiKey = 'api_key_goes_here' secretKey = 'secret_key_goes_here' device_hid = 'device_hid_goes_here' api_method_uri = api_method_uri . format ( deviceHid = device_hid ) # *************************STEP-1 Create a Canonical Request for signing*********** httpRequestMethod = 'GET' # Telemetry pull by application hid canonicalURI = api_method_uri # Example on how to handle the from/to timestamps for API calls # from_timestamp_raw = datetime.datetime.now() - datetime.timedelta(hours=HOURS_TO_RETRIEVE) # to_timestamp_raw = datetime.datetime.now() # from_timestamp = from_timestamp_raw.strftime('%Y-%m-%dT%H:%M:%S.%fZ') # to_timestamp = to_timestamp_raw.strftime('%Y-%m-%dT%H:%M:%S.%fZ') # Paging variables go here. PAGE_TO_RETRIEVE = '0' NUM_ITEMS_ON_EACH_PAGE = '150' # Example: URL Query params with timestamp ranges # url_query_params = '_page=' + urllib.parse.quote(PAGE_TO_RETRIEVE) + '&' + '_size=' + urllib.parse.quote(NUM_ITEMS_ON_EACH_PAGE) + '&' + 'fromTimestamp=' + urllib.parse.quote(from_timestamp) + \"&\" + 'toTimestamp=' + urllib.parse.quote(to_timestamp) # query_params_to_encrypt = '_page=' + PAGE_TO_RETRIEVE + '\\n' + '_size=' + NUM_ITEMS_ON_EACH_PAGE + '\\n' + 'fromtimestamp=' + from_timestamp + '\\n' + 'totimestamp=' + to_timestamp # URL query params with paging only url_query_params = '' query_params_to_encrypt = '' # url_query_params = '_page=' + urllib.parse.quote(PAGE_TO_RETRIEVE) + '&' + '_size=' + urllib.parse.quote(NUM_ITEMS_ON_EACH_PAGE) # query_params_to_encrypt = '_page=' + PAGE_TO_RETRIEVE + '\\n' + '_size=' + NUM_ITEMS_ON_EACH_PAGE # use this to handle any body payloads coming in body_payload = \"\" # print(canonicalQueryString) # ************* REQUEST VALUES ************* hexEncode = hashlib . sha256 ( body_payload . encode ( 'utf-8' )) . hexdigest () if url_query_params != '' : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + query_params_to_encrypt + ' \\n ' + hexEncode else : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + hexEncode print ( canonicalRequest ) # ********************STEP-2 Create the string to sign********************************* hashedCanonicalRequest = hashlib . sha256 ( canonicalRequest . encode ( 'utf-8' )) . hexdigest () # Set the current timestamp of the request, API version should be set to 1 t = datetime . datetime . utcnow () requestTimestamp = t . strftime ( '%Y-%m- %d T%H:%M:%S. %f Z' ) apiVersion = \"1\" # Step-2 stringToSign = hashedCanonicalRequest + ' \\n ' + apiKey + ' \\n ' + requestTimestamp + ' \\n ' + apiVersion print ( stringToSign ) # ************STEP-3 Create the signing key********************** def sign ( key , msg ): return hmac . new ( key , msg . encode ( 'utf-8' ), hashlib . sha256 ) . hexdigest () # Create the signing key using the function defined above. signingKey = secretKey signingKey = sign ( apiKey . encode ( 'utf-8' ), signingKey ) signingKey = sign ( requestTimestamp . encode ( 'utf-8' ), signingKey ) signingKey = sign ( apiVersion . encode ( 'utf-8' ), signingKey ) # ************STEP-4 Create the final signature******************************* # Sign the string_to_sign using the signing_key signature = sign ( signingKey . encode ( 'utf-8' ), stringToSign ) # Make the GET call for this API function # Example with application HID # url = base_url + api_method_uri + application_hid + \"?\" + url_query_params url = base_url + api_method_uri + \"?\" + url_query_params headers = { 'Content-type' : 'application/json' , 'Accept' : 'application/json' , 'x-arrow-apikey' : apiKey , 'x-arrow-date' : requestTimestamp , 'x-arrow-version' : apiVersion , 'x-arrow-signature' : signature } r = requests . get ( url , headers = headers ) if r and r . content : # format the content as dictionary objects returnedData = json . loads ( r . content ) for data in returnedData [ 'data' ]: print ( data ) else : print ( 'No telemetry data returned.' ) else : print ( 'There was no data returned from the API.' )","title":"API Request Signing"},{"location":"API_RequestSigning/#api-request-signing","text":"Note **The following applies to the xConnect and Asset Management APIs https://assetmgmt-api.senecaxconnect.com https://api.senecaxconnect.com All HTTP API requests into the xConnect Platform must be signed by the client application and validated by the Asset Management/xConnect API Platform to ensure they come from authenticated clients. There are 2 important pieces of information - apiKey and secretKey that can be obtained from the cloud portal and embedded into the client application for signing requests. It's recommended that these keys are stored encrypted on the client side. For example in this document, we use the following keys apiKey 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 secretKey ARAzUzRzekFwRTNACBQYUx89LlZyImhKFVloHUVMDw8EGRxxSCckFgdFPysAAWJCLDgMdkstZzw3GGVqNHxXcno5Iz54LRBSKy0TaCBwNndkfQNdD38KAA== The client application needs to process the API request details using 5 steps explained below. The input parameters include such information as the URL, HTTP method, query string, JSON payload, HTTP headers, the security keys, etc. The computation outcome is a signature value which is included in the HTTP header.","title":"API Request Signing"},{"location":"API_RequestSigning/#step-1-create-a-canonical-request-for-signing","text":"The first step is to build a string representation of your request in a pre-defined format. Java canonicalRequest = httpRequestMethod + '\\n' + canonicalURI + '\\n' + canonicalQueryString + '\\n' + hexEncode ( hash ( payload )); Python hexEncode = hashlib . sha256 ( body_payload . encode ( 'utf-8' )) . hexdigest () if url_query_params != '' : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + query_params_to_encrypt + ' \\n ' + hexEncode else : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + hexEncode httpRequestMethod Put one of the following methods in a line by itself - GET, POST, PUT, PATCH POST canonicalURI The canonical URI is the URI-encoded version of the absolute path component of the URI, which is everything in the URI from the HTTP host to the question mark character (\"?\") that begins the query string parameters (if any). /api/v1/kronos/gateways canonicalQueryString Create each line containing a name/value pair in the format name=value. Name field is converted to lowercase and URL-encoded. Sort all the lines in ascending order Example QueryString: lastName=Doe&firstName=Jane&Age=30 age=30 firstname=Jane lastname=Doe hexEncode(hash(payload)) The payload (if any) is most likely in JSON format. If there's no payload, use an empty string Hash the payload content with SHA-256 Hex-encode the hash value Convert the hex-encoded value to lowercase Example of an empty payload: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 Combining all of the results above produces the following string: POST /api/v1/kronos/gateways age=30 firstname=Jane lastname=Doe e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 Finally, hash this computed canonical request, hex-encode and lowercase it. This is the result of step 1. 5a2d3589ffb15fab720069fbd26fd8e8311a1c7047e5899608faff450df6d7dc","title":"Step 1: Create a Canonical Request for signing"},{"location":"API_RequestSigning/#step-2-create-the-string-to-sign","text":"Java stringtoSign = hashedCanonicalRequest + '\\n' + apiKey + '\\n' + requestTimestamp + '\\n' + apiversion ; hashedCanonicalRequest This is the result of step 1 5a2d3589ffb15fab720069fbd26fd8e8311a1c7047e5899608faff450df6d7dc apiKey Provided apiKey from xConnect team ( support@senecaxconnect.com ) 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 requestTimestamp Current UTC time in ISO-8601 format - YYYY-MM-DDThh\ud83c\uddf2\ud83c\uddf2s.sssZ 2016-04-12T14:28:36.218Z apiVersion Version is 1 1 Combining all of the results above produces the following string. This is the result of step 2. 5a2d3589ffb15fab720069fbd26fd8e8311a1c7047e5899608faff450df6d7dc 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 2016-04-12T14:28:36.218Z 1","title":"Step 2: Create the string to sign"},{"location":"API_RequestSigning/#step-3-create-the-signing-key","text":"In this step we're going to use the HMAC-SHA256 algorithm a few times to generate the signing key. In the pseudocode, it'll be shown as hmacSha256(key, data). Note the order of the input parameters because if you're using some third-party library for this function, the order of the input parameters might be reversed. The output of this function is in binary, hence note the hex-encode function being used below Java signingKey = secretKey; signingKey = hexEncode(hmacSha256(apiKey, signingKey)); signingKey = hexEncode(hmacSha256(requestTimestamp, signingKey)); signingKey = hexEncode(hmacSha256(apiVersion, signingKey)); secretKey Provided secretKey from Kronos portal apiKey Provided apiKey from Arrow Connect portal requestTimestamp Must be the same value as in step 2 apiVersion Must be the same value as in step 2 For the example in this guide, here's the output of this step. This is the result of step 3 signingKey = ARAzUzRzekFwRTNACBQYUx89LlZyImhKFVloHUVMDw8EGRxxSCckFgdFPysAAWJCLDgMdkstZzw3GGVqNHxXcno5Iz54LRBSKy0TaCBwNndkfQNdD38KAA== signingKey = 3c6e85f6a719e5b8bd77fde0cbdbe19d947f38451afbc8ef6e49a083d86a9c54 signingKey = 3223bf9bc2d2180046cc40c2e1ed6f9d08261a6c4a394b23c5311e83633a8ef7 signingKey = d0d1518fc5290c22f1444d46d9c08dd03cc33c6fdad8bbcd57be65b1e2b0b493","title":"Step 3: Create the signing key"},{"location":"API_RequestSigning/#step-4-create-the-final-signature","text":"The signature is computed by signing the result from step 2 and step 3 Java signature = hexEncode(hmacSha256(signingKey, stringToSign) signingKey Result of step 3 stringToSign Result of step 2 Result of step 4 is below 28c3ab6cc82294b61e9b2855b428090e474fd1e066c4da63f9715bd2204df553","title":"Step 4: Create the final signature"},{"location":"API_RequestSigning/#step-5-add-required-headers-to-request-and-submit","text":"x-arrow-apikey: Provided apiKey x-arrow-date: requestTimestamp from step 2 x-arrow-version: apiVersion from step 2 x-arrow-signature: final signature from step 4 x-arrow-apikey: 5501f50fdc62aee5d04dbd6a58b68b781ee2aaade8ad1eb24b1e4e77cb282ae2 x-arrow-date: 2016-04-12T14:28:36.218Z x-arrow-version: 1 x-arrow-signature: 28c3ab6cc82294b61e9b2855b428090e474fd1e066c4da63f9715bd2204df553","title":"Step 5: Add required headers to request and submit"},{"location":"API_RequestSigning/#complete-api-request-example","text":"Note **The Java example simply generates the signed token. You must use the signature within a tool such as Postman to perform the full request. Java public void generateSignedRequestToken () { String API_KEY = \"Your_Raw_API_key\" ; String SECRET_KEY = \"Your_Raw_Secret_key\" ; String apiMethodUri = \"/api/v1/kronos/devices\" ; String timestamp = Instant . now (). toString (); String httpRequestMethod = \"GET\" ; List < String > uriParameters = new ArrayList <> (); HashMap < String , String > uriParametersMap = new HashMap <> (); String signature = \"\" ; try { // region Specify query parameters here uriParametersMap . put ( \"_page\" , \"0\" ); uriParametersMap . put ( \"_size\" , \"100\" ); // endregion for ( Map . Entry < String , String > entry : uriParametersMap . entrySet ()) { String name = entry . getKey (); String value = entry . getValue (); try { uriParameters . add ( String . format ( \"%s=%s\" , URLEncoder . encode ( name . toLowerCase (), StandardCharsets . UTF_8 . toString ()), AcsUtils . trimToEmpty ( value ))); } catch ( Exception e ) { // ignore } } // region Create canonical request StringBuilder builder = new StringBuilder (); builder . append ( httpRequestMethod ). append ( '\\n' ); builder . append ( apiMethodUri ). append ( '\\n' ); // append parameters if ( uriParameters . size () > 0 ) { Collections . sort ( uriParameters ); uriParameters . forEach ( p -> builder . append ( p ). append ( '\\n' )); } builder . append ( sha256Hex ( \"\" )); String canonicalRequest = builder . toString (); // endregion // region Sign the string StringBuilder stringToSign = new StringBuilder (); stringToSign . append ( sha256Hex ( canonicalRequest )). append ( '\\n' ); stringToSign . append ( API_KEY ). append ( '\\n' ); stringToSign . append ( timestamp ). append ( '\\n' ); stringToSign . append ( \"1\" ); signature = hmacSha256Hex ( hmacSha256Hex ( \"1\" , hmacSha256Hex ( timestamp , hmacSha256Hex ( API_KEY , SECRET_KEY ))), stringToSign . toString ()); } catch ( Exception e ) { } System . out . print ( \"Signed auth token = \" + signature ); } public static String hmacSha256Hex ( String key , String data ) { try { SecretKeySpec signingKey = new SecretKeySpec ( key . getBytes ( StandardCharsets . UTF_8 ), \"HmacSha256\" ); Mac mac = Mac . getInstance ( \"HmacSha256\" ); mac . init ( signingKey ); return printHex ( mac . doFinal ( data . getBytes ( StandardCharsets . UTF_8 ))); } catch ( Exception e ) { throw new AcsRuntimeException ( \"error while calculating: \" + \"HmacSha256\" , e ); } } public static String sha256Hex ( String data ) { try { return printHex ( MessageDigest . getInstance ( \"SHA-256\" ). digest ( data . getBytes ( StandardCharsets . UTF_8 ))); } catch ( Exception e ) { throw new AcsRuntimeException ( \"error while calculating: \" + \"SHA-256\" , e ); } } public static String printHex ( byte [] data ) { return DatatypeConverter . printHexBinary ( data ). toLowerCase (); } Python # -*- coding: utf-8 -*- import datetime import hashlib import hmac import json import requests import urllib.parse dir ( hashlib ) # Base URL and api method URI here: base_url = 'https://assetmgmt-api.senecaxconnect.com' api_method_uri = '/api/v1/kronos/telemetries/devices/ {deviceHid} /latest' # Put API key and Secret Keys (RAW) here: # Contact support@senecaxconnect.com for this information. application_hid = \"your_applicationhid_goes_here\" apiKey = 'api_key_goes_here' secretKey = 'secret_key_goes_here' device_hid = 'device_hid_goes_here' api_method_uri = api_method_uri . format ( deviceHid = device_hid ) # *************************STEP-1 Create a Canonical Request for signing*********** httpRequestMethod = 'GET' # Telemetry pull by application hid canonicalURI = api_method_uri # Example on how to handle the from/to timestamps for API calls # from_timestamp_raw = datetime.datetime.now() - datetime.timedelta(hours=HOURS_TO_RETRIEVE) # to_timestamp_raw = datetime.datetime.now() # from_timestamp = from_timestamp_raw.strftime('%Y-%m-%dT%H:%M:%S.%fZ') # to_timestamp = to_timestamp_raw.strftime('%Y-%m-%dT%H:%M:%S.%fZ') # Paging variables go here. PAGE_TO_RETRIEVE = '0' NUM_ITEMS_ON_EACH_PAGE = '150' # Example: URL Query params with timestamp ranges # url_query_params = '_page=' + urllib.parse.quote(PAGE_TO_RETRIEVE) + '&' + '_size=' + urllib.parse.quote(NUM_ITEMS_ON_EACH_PAGE) + '&' + 'fromTimestamp=' + urllib.parse.quote(from_timestamp) + \"&\" + 'toTimestamp=' + urllib.parse.quote(to_timestamp) # query_params_to_encrypt = '_page=' + PAGE_TO_RETRIEVE + '\\n' + '_size=' + NUM_ITEMS_ON_EACH_PAGE + '\\n' + 'fromtimestamp=' + from_timestamp + '\\n' + 'totimestamp=' + to_timestamp # URL query params with paging only url_query_params = '' query_params_to_encrypt = '' # url_query_params = '_page=' + urllib.parse.quote(PAGE_TO_RETRIEVE) + '&' + '_size=' + urllib.parse.quote(NUM_ITEMS_ON_EACH_PAGE) # query_params_to_encrypt = '_page=' + PAGE_TO_RETRIEVE + '\\n' + '_size=' + NUM_ITEMS_ON_EACH_PAGE # use this to handle any body payloads coming in body_payload = \"\" # print(canonicalQueryString) # ************* REQUEST VALUES ************* hexEncode = hashlib . sha256 ( body_payload . encode ( 'utf-8' )) . hexdigest () if url_query_params != '' : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + query_params_to_encrypt + ' \\n ' + hexEncode else : canonicalRequest = httpRequestMethod + ' \\n ' + canonicalURI + ' \\n ' + hexEncode print ( canonicalRequest ) # ********************STEP-2 Create the string to sign********************************* hashedCanonicalRequest = hashlib . sha256 ( canonicalRequest . encode ( 'utf-8' )) . hexdigest () # Set the current timestamp of the request, API version should be set to 1 t = datetime . datetime . utcnow () requestTimestamp = t . strftime ( '%Y-%m- %d T%H:%M:%S. %f Z' ) apiVersion = \"1\" # Step-2 stringToSign = hashedCanonicalRequest + ' \\n ' + apiKey + ' \\n ' + requestTimestamp + ' \\n ' + apiVersion print ( stringToSign ) # ************STEP-3 Create the signing key********************** def sign ( key , msg ): return hmac . new ( key , msg . encode ( 'utf-8' ), hashlib . sha256 ) . hexdigest () # Create the signing key using the function defined above. signingKey = secretKey signingKey = sign ( apiKey . encode ( 'utf-8' ), signingKey ) signingKey = sign ( requestTimestamp . encode ( 'utf-8' ), signingKey ) signingKey = sign ( apiVersion . encode ( 'utf-8' ), signingKey ) # ************STEP-4 Create the final signature******************************* # Sign the string_to_sign using the signing_key signature = sign ( signingKey . encode ( 'utf-8' ), stringToSign ) # Make the GET call for this API function # Example with application HID # url = base_url + api_method_uri + application_hid + \"?\" + url_query_params url = base_url + api_method_uri + \"?\" + url_query_params headers = { 'Content-type' : 'application/json' , 'Accept' : 'application/json' , 'x-arrow-apikey' : apiKey , 'x-arrow-date' : requestTimestamp , 'x-arrow-version' : apiVersion , 'x-arrow-signature' : signature } r = requests . get ( url , headers = headers ) if r and r . content : # format the content as dictionary objects returnedData = json . loads ( r . content ) for data in returnedData [ 'data' ]: print ( data ) else : print ( 'No telemetry data returned.' ) else : print ( 'There was no data returned from the API.' )","title":"Complete API Request Example"},{"location":"Agent_API/","text":"Agent API The following are endpoints that can be used to interact with the xConnect Agent. Note As of current release, the API is only bound to localhost or 127.0.0.1 and cannot be accessed by any other networked machines. If a remote device needs to access the API, please contact support for an HTTPS version of the API. Get Latest Sensor Data Used to collect the latest sensor data from all xConnect Agent sensor points URL : http://localhost:8886/getSensorLatest Method : GET Auth required : NO Success Response Code : 200 OK Content example [ { \"SensorID\" : 1 , \"SensorSource\" : \"WMI\" , \"SensorName\" : \"Network NIC1 MaxLinkSpeed\" , \"SensorUnit\" : null , \"SensorFullKey\" : \"Network_NIC1_MaxLinkSpeed\" , \"DataType\" : \"Integer\" , \"LatestValue\" : \"492\" , \"LocalSensorThreshold\" : null , \"LocalStrictOperator\" : null , \"DashboardEnabled\" : null , \"GaugeEnabled\" : null }, ... repea te d lis t o f arrays f or all se ns ors ] Error Response Condition : If route is incorrect, you will receive a not found response. Code : 404 NOT FOUND Submit Telemetry to xConnect Used to collect telemetry from 3 rd party applications that can POST a formed JSON object. The API will consume this object and submit it to the xConnect Gateway and appear on your cloud dashboard. URL : http://localhost:8886/submitTelemetry Method : POST Auth required : NO Data constraints uid value should be a unique UUID per device or object. These can be generated at: https://www.uuidgenerator.net/version4 Note You may use the value \"self\" for the uid which will inherit the uid, type, and name that agent is already using for system telemetry type value will drive how the device is categorized on the cloud dashboard (Only needed when not using \"self\") name value is what the friendly name of the device will be on the cloud dashboard (Only needed when not using \"self\") telemetry value is a list that can be a single object or multiple objects. Each object must contain 3 \"categories\" that are used to assemble the telemetry key Each telemetry list object needs to have a primaryCategory , secondaryCategory , and tertiaryCategory specified or you will receive a malformed JSON response { \"xconnect\" : { \"uid\" : \"[unique UID per device or object]\" , \"type\" : \"[Device or Asset Type]\" , \"name\" : \"[Device Name that is human friendly]\" , \"telemetry\" : [ { \"primaryCategory\" : \"[First Value of Telemetry Key]\" , \"secondaryCategory\" : \"[Second Value of Telemetry Key]\" , \"tertiaryCategory\" : \"[Third Value of Telemetry Key]\" , \"value\" : \"[TelemetryValue]\" } ] } } Data example { \"xconnect\" : { \"uid\" : \"2bf2aa37-fb9c-460b-8f49-5d671017bec4\" , \"type\" : \"Display\" , \"name\" : \"Device1234567\" , \"telemetry\" : [ { \"primaryCategory\" : \"Display\" , \"secondaryCategory\" : \"Model1234\" , \"tertiaryCategory\" : \"Resolution\" , \"value\" : \"1920x1080\" }, { \"primaryCategory\" : \"Display\" , \"secondaryCategory\" : \"Model1234\" , \"tertiaryCategory\" : \"Power State\" , \"value\" : \"Standby\" } ] } } Success Response Code : 201 OK","title":"Agent API"},{"location":"Agent_API/#agent-api","text":"The following are endpoints that can be used to interact with the xConnect Agent. Note As of current release, the API is only bound to localhost or 127.0.0.1 and cannot be accessed by any other networked machines. If a remote device needs to access the API, please contact support for an HTTPS version of the API.","title":"Agent API"},{"location":"Agent_API/#get-latest-sensor-data","text":"Used to collect the latest sensor data from all xConnect Agent sensor points URL : http://localhost:8886/getSensorLatest Method : GET Auth required : NO","title":"Get Latest Sensor Data"},{"location":"Agent_API/#success-response","text":"Code : 200 OK Content example [ { \"SensorID\" : 1 , \"SensorSource\" : \"WMI\" , \"SensorName\" : \"Network NIC1 MaxLinkSpeed\" , \"SensorUnit\" : null , \"SensorFullKey\" : \"Network_NIC1_MaxLinkSpeed\" , \"DataType\" : \"Integer\" , \"LatestValue\" : \"492\" , \"LocalSensorThreshold\" : null , \"LocalStrictOperator\" : null , \"DashboardEnabled\" : null , \"GaugeEnabled\" : null }, ... repea te d lis t o f arrays f or all se ns ors ]","title":"Success Response"},{"location":"Agent_API/#error-response","text":"Condition : If route is incorrect, you will receive a not found response. Code : 404 NOT FOUND","title":"Error Response"},{"location":"Agent_API/#submit-telemetry-to-xconnect","text":"Used to collect telemetry from 3 rd party applications that can POST a formed JSON object. The API will consume this object and submit it to the xConnect Gateway and appear on your cloud dashboard. URL : http://localhost:8886/submitTelemetry Method : POST Auth required : NO Data constraints uid value should be a unique UUID per device or object. These can be generated at: https://www.uuidgenerator.net/version4 Note You may use the value \"self\" for the uid which will inherit the uid, type, and name that agent is already using for system telemetry type value will drive how the device is categorized on the cloud dashboard (Only needed when not using \"self\") name value is what the friendly name of the device will be on the cloud dashboard (Only needed when not using \"self\") telemetry value is a list that can be a single object or multiple objects. Each object must contain 3 \"categories\" that are used to assemble the telemetry key Each telemetry list object needs to have a primaryCategory , secondaryCategory , and tertiaryCategory specified or you will receive a malformed JSON response { \"xconnect\" : { \"uid\" : \"[unique UID per device or object]\" , \"type\" : \"[Device or Asset Type]\" , \"name\" : \"[Device Name that is human friendly]\" , \"telemetry\" : [ { \"primaryCategory\" : \"[First Value of Telemetry Key]\" , \"secondaryCategory\" : \"[Second Value of Telemetry Key]\" , \"tertiaryCategory\" : \"[Third Value of Telemetry Key]\" , \"value\" : \"[TelemetryValue]\" } ] } } Data example { \"xconnect\" : { \"uid\" : \"2bf2aa37-fb9c-460b-8f49-5d671017bec4\" , \"type\" : \"Display\" , \"name\" : \"Device1234567\" , \"telemetry\" : [ { \"primaryCategory\" : \"Display\" , \"secondaryCategory\" : \"Model1234\" , \"tertiaryCategory\" : \"Resolution\" , \"value\" : \"1920x1080\" }, { \"primaryCategory\" : \"Display\" , \"secondaryCategory\" : \"Model1234\" , \"tertiaryCategory\" : \"Power State\" , \"value\" : \"Standby\" } ] } }","title":"Submit Telemetry to xConnect"},{"location":"Agent_API/#success-response_1","text":"Code : 201 OK","title":"Success Response"},{"location":"Agent_Install/","text":"Agent Installation If you purchased an appliance from Seneca, it may already contain the xConnect Server Agent. However, it is highly recommended to always download and install the latest version available at time of setup. Installation Download the latest xConnect Agent, found at www.senecaxconnect.com (Click the Download Agent link) Proceed with installation (Run as Administrator), completing all prompts. Note Make sure to run as Administrator! (Right-click the installation file and click Run As Administrator) Configuration (Cloud-Enablement) Access the Agent Configuration Portal by going to http://localhost:8885/ (Also available by double clicking the xConnect icon in the system tray) Click on the \u201cSettings\u201d navigation item at the top of the page. In the \u201cGateway Address:\u201d field, enter the IP address of your gateway. (Skip this step if using a Virtual gateway) In the \u201cGateway Hostname:\u201d field, enter the hostname of the gateway device. This will look like XCGW-xxxxxx which is identified with a label your purchased Gateway device. Once the IP address and the hostname of the gateway has been entered, check the \u201cEnable Cloud\u201d checkbox and click the Save Changes button","title":"Step 2 - Install Agent"},{"location":"Agent_Install/#agent-installation","text":"If you purchased an appliance from Seneca, it may already contain the xConnect Server Agent. However, it is highly recommended to always download and install the latest version available at time of setup.","title":"Agent Installation"},{"location":"Agent_Install/#installation","text":"Download the latest xConnect Agent, found at www.senecaxconnect.com (Click the Download Agent link) Proceed with installation (Run as Administrator), completing all prompts. Note Make sure to run as Administrator! (Right-click the installation file and click Run As Administrator)","title":"Installation"},{"location":"Agent_Install/#configuration-cloud-enablement","text":"Access the Agent Configuration Portal by going to http://localhost:8885/ (Also available by double clicking the xConnect icon in the system tray) Click on the \u201cSettings\u201d navigation item at the top of the page. In the \u201cGateway Address:\u201d field, enter the IP address of your gateway. (Skip this step if using a Virtual gateway) In the \u201cGateway Hostname:\u201d field, enter the hostname of the gateway device. This will look like XCGW-xxxxxx which is identified with a label your purchased Gateway device. Once the IP address and the hostname of the gateway has been entered, check the \u201cEnable Cloud\u201d checkbox and click the Save Changes button","title":"Configuration (Cloud-Enablement)"},{"location":"Agent_Overview/","text":"Agent This is a required component to any system or edge device that you would like to be monitored by the xConnect Remote Management Platform. This agent is responsible for collecting health information (also called telemetry) as well as securely facilitating remote management features. graph LR A(Edge Devices) --> B(Agent) B --> A B -->|MQTT|C(Gateway) C -->|SSL|D(xConnect Cloud Dashboard - Azure); style B fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; Download The latest version of the Agent installation executable is available on our download repository: downloads.senecaxconnect.com Installation Download the latest xConnect Agent from the Downloads Repository Extract zip file Right-click on the setup file and select 'Run as Administrator' Proceed through installer, accepting all prompts Open Windows Service Manager and verify \"xConnect Agent Core\" service exists and is Running Note Step 3 is important! The background services may fail to install if the installer is not ran with elevated privileges! Windows Service The Agent consists of a single background Windows Service, the xConnect Agent Core . The Agent Core service is responsible for the following functions and modules: Telemetry Engine This function is the telemetry collection engine that continuously polls various sensors throughout the system. It is also responsible for transmitting this telemetry to the Secure Gateway. Telemetry Collection and Submission occurs every 2 minutes (every even minute). VMS/CMS Integration Module This module is the telemetry collection engine that continuously polls supported Video Management Systems or Content Management Systems for health and additional meta data of connected IP cameras (VMS). It is also responsible for transmitting this telemetry to the Secure Gateway. Telemetry Collection and Submission occurs every 2 minutes (every odd minute). Auto-Updater Module This module handles touchless over the wire updates of the Agent. An update package can be delivered to the Secure Gateway, and the Agent will automatically download and install this update unattended. Checks for updates every 5 minutes Agent Web Interface This module provides a local (or LAN accessible) web interface for managing and configuring the Agent. Starts Automatically as part of the Agent Core and is accessible from the local machine @ http://localhost:8885 or on a networked machine @ http://IP_OF_SERVER:8885 Note This web interface is required to enable Cloud support and configuration of the gateway connection! Remote Command Module This module handles remote commands that are securely received through the gateway. It is responsible for executing and tracking status of remotely triggered commands. Commands or scripts that are currently supported are Windows CMD and Windows PowerShell. Agent RESTful API This module provides a mechanism for 3 rd party applications to ingest or transmit telemetry in and out of the Agent.","title":"Server Agent"},{"location":"Agent_Overview/#agent","text":"This is a required component to any system or edge device that you would like to be monitored by the xConnect Remote Management Platform. This agent is responsible for collecting health information (also called telemetry) as well as securely facilitating remote management features. graph LR A(Edge Devices) --> B(Agent) B --> A B -->|MQTT|C(Gateway) C -->|SSL|D(xConnect Cloud Dashboard - Azure); style B fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black;","title":"Agent"},{"location":"Agent_Overview/#download","text":"The latest version of the Agent installation executable is available on our download repository: downloads.senecaxconnect.com","title":"Download"},{"location":"Agent_Overview/#installation","text":"Download the latest xConnect Agent from the Downloads Repository Extract zip file Right-click on the setup file and select 'Run as Administrator' Proceed through installer, accepting all prompts Open Windows Service Manager and verify \"xConnect Agent Core\" service exists and is Running Note Step 3 is important! The background services may fail to install if the installer is not ran with elevated privileges!","title":"Installation"},{"location":"Agent_Overview/#windows-service","text":"The Agent consists of a single background Windows Service, the xConnect Agent Core . The Agent Core service is responsible for the following functions and modules:","title":"Windows Service"},{"location":"Agent_Overview/#telemetry-engine","text":"This function is the telemetry collection engine that continuously polls various sensors throughout the system. It is also responsible for transmitting this telemetry to the Secure Gateway. Telemetry Collection and Submission occurs every 2 minutes (every even minute).","title":"Telemetry Engine"},{"location":"Agent_Overview/#vmscms-integration-module","text":"This module is the telemetry collection engine that continuously polls supported Video Management Systems or Content Management Systems for health and additional meta data of connected IP cameras (VMS). It is also responsible for transmitting this telemetry to the Secure Gateway. Telemetry Collection and Submission occurs every 2 minutes (every odd minute).","title":"VMS/CMS Integration Module"},{"location":"Agent_Overview/#auto-updater-module","text":"This module handles touchless over the wire updates of the Agent. An update package can be delivered to the Secure Gateway, and the Agent will automatically download and install this update unattended. Checks for updates every 5 minutes","title":"Auto-Updater Module"},{"location":"Agent_Overview/#agent-web-interface","text":"This module provides a local (or LAN accessible) web interface for managing and configuring the Agent. Starts Automatically as part of the Agent Core and is accessible from the local machine @ http://localhost:8885 or on a networked machine @ http://IP_OF_SERVER:8885 Note This web interface is required to enable Cloud support and configuration of the gateway connection!","title":"Agent Web Interface"},{"location":"Agent_Overview/#remote-command-module","text":"This module handles remote commands that are securely received through the gateway. It is responsible for executing and tracking status of remotely triggered commands. Commands or scripts that are currently supported are Windows CMD and Windows PowerShell.","title":"Remote Command Module"},{"location":"Agent_Overview/#agent-restful-api","text":"This module provides a mechanism for 3 rd party applications to ingest or transmit telemetry in and out of the Agent.","title":"Agent RESTful API"},{"location":"Auth_AzureAD/","text":"Azure-Based Active Directory Authentication xConnect supports Azure-based Active Directory integration that will enable you to leverage your AD instance for managing permissions within xConnect. The integration is very beneficial for larger xConnect implementations that have many users accessing the tool. The AD integration requires the following in order to be activated with your xConnect tenant: Azure AD Tenant ID Custom subdomain for accessing xConnect and our Asset Management portal (i.e. tenant.senecaxconnect.com, tenant-assetmgmt.senecaxconnect.com) Creation of xconnect-specific AD groups that users can be assigned. Approval and consent of our xConnect in your Azure Portal How to setup Azure AD integration Current limitations Prior to requesting Azure AD integration, please note that as of April, 2021 xConnect currently supports the following: - Only full members of the Active Directory subscription are supported. Guests are not currently supported at this time: In the example above, the dev four and dev three accounts are not supported for xConnect integration, while test five and six are. xConnect end user accounts with customer-specific dashboard visibility are not supported. Only end user types with \"Overview\" dashboard access can be integrated with AD. Setup process 1. Send an e-mail to support@senecaxconnect.com with the subject \"Azure AD Request\". Include the following information: - Company name that has been used for your xConnect subscription - Preferred subdomain for accessing xConnect. Must not have any special characters. Example: (abccompany.senecaxconnect.com) - Do you require access to the asset management portal ( https://www.assetmgmt.senecaxconnect.com ) - Your Azure AD Tenant ID - This can be found by logging in to your Azure Portal and going to \"Azure Active Directory\": 2. Create the following groups in your Azure Active Directory instance: - xconnect-power-user - xconnect-admin-user - xconnect-end-user - xconnect-asset-management 3. Assign your users to the appropriate groups. Please note that a user can only belong to 1 of the power, end, or admin user groups and the asset management account. Example: User A assigned xconnect-power-user, xconnect-asset-management \u2190 Correct User B assigned xconnect-end-user, xconnect-admin-user \u2190 Incorrect 4. Log in to your Azure portal and go to Azure Active Directory. Register for the \"xConnect\" Application via App Registrations. - Ensure that an admin provides consent to access your AD group information, otherwise users will not be able to log in to xConnect 5. Once you have received notification from our support team that your subdomains have been created and are ready for use, you may begin using your AD integration.","title":"Azure-Based Authentication"},{"location":"Auth_AzureAD/#azure-based-active-directory-authentication","text":"xConnect supports Azure-based Active Directory integration that will enable you to leverage your AD instance for managing permissions within xConnect. The integration is very beneficial for larger xConnect implementations that have many users accessing the tool. The AD integration requires the following in order to be activated with your xConnect tenant: Azure AD Tenant ID Custom subdomain for accessing xConnect and our Asset Management portal (i.e. tenant.senecaxconnect.com, tenant-assetmgmt.senecaxconnect.com) Creation of xconnect-specific AD groups that users can be assigned. Approval and consent of our xConnect in your Azure Portal","title":"Azure-Based Active Directory Authentication"},{"location":"Auth_AzureAD/#how-to-setup-azure-ad-integration","text":"","title":"How to setup Azure AD integration"},{"location":"Auth_AzureAD/#current-limitations","text":"Prior to requesting Azure AD integration, please note that as of April, 2021 xConnect currently supports the following: - Only full members of the Active Directory subscription are supported. Guests are not currently supported at this time: In the example above, the dev four and dev three accounts are not supported for xConnect integration, while test five and six are. xConnect end user accounts with customer-specific dashboard visibility are not supported. Only end user types with \"Overview\" dashboard access can be integrated with AD.","title":"Current limitations"},{"location":"Auth_AzureAD/#setup-process","text":"1. Send an e-mail to support@senecaxconnect.com with the subject \"Azure AD Request\". Include the following information: - Company name that has been used for your xConnect subscription - Preferred subdomain for accessing xConnect. Must not have any special characters. Example: (abccompany.senecaxconnect.com) - Do you require access to the asset management portal ( https://www.assetmgmt.senecaxconnect.com ) - Your Azure AD Tenant ID - This can be found by logging in to your Azure Portal and going to \"Azure Active Directory\": 2. Create the following groups in your Azure Active Directory instance: - xconnect-power-user - xconnect-admin-user - xconnect-end-user - xconnect-asset-management 3. Assign your users to the appropriate groups. Please note that a user can only belong to 1 of the power, end, or admin user groups and the asset management account. Example: User A assigned xconnect-power-user, xconnect-asset-management \u2190 Correct User B assigned xconnect-end-user, xconnect-admin-user \u2190 Incorrect 4. Log in to your Azure portal and go to Azure Active Directory. Register for the \"xConnect\" Application via App Registrations. - Ensure that an admin provides consent to access your AD group information, otherwise users will not be able to log in to xConnect 5. Once you have received notification from our support team that your subdomains have been created and are ready for use, you may begin using your AD integration.","title":"Setup process"},{"location":"Dashboard_Overview/","text":"Web Dashboard The Web Client Dashboard is hosted by Arrow via Microsoft Azure and is included in the cost of xConnect Remote Management Platform license annual fees. No need to manage your own cloud costs, we take care of that for you! graph LR A(Edge Devices) --> B(Agent) B --> A B -->|MQTT|C(Gateway) C -->|SSL|D(xConnect Cloud Dashboard - Azure); style D fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; Gaining Access The Web Client Dashboard can be accessed at the following URL: https://senecaxconnect.com You will need to be onboarded by the xConnect Administration team to access the Web Client Dashboard. This process is initiated by your Seneca account manager Once onboarded, you will be emailed login instructions. When launching the URL, you will be prompted to enter your username and password. This is the account provided by the xConnect Administration team or your account owner. Server/Device Organizational Hierarchy The organizational structure of your customers and their respective servers and devices are very important to understand. This organization is integral to simplifying configuration of Events and Alerts and the correct visualization of objects in your dashboard screens. There are 3 levels to the organizational hierarchy: Customer, Gateway, Server/Device Level 1 \u2013 Customer These are managed and configured via the Manage Customers screen. Level 2 \u2013 Gateway These are managed and configured via the Manage Gateways screen and are assigned to a Customer Level 3 \u2013 Server/Device These are all servers that contain a Server Agent or Devices (connected via integration or added as IP Device) that are successfully submitting telemetry to the platform. Configuration Additional dashboard and configuration documentation is available within the Usage Guide section of this documentation library.","title":"Web Dashboard"},{"location":"Dashboard_Overview/#web-dashboard","text":"The Web Client Dashboard is hosted by Arrow via Microsoft Azure and is included in the cost of xConnect Remote Management Platform license annual fees. No need to manage your own cloud costs, we take care of that for you! graph LR A(Edge Devices) --> B(Agent) B --> A B -->|MQTT|C(Gateway) C -->|SSL|D(xConnect Cloud Dashboard - Azure); style D fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black;","title":"Web Dashboard"},{"location":"Dashboard_Overview/#gaining-access","text":"The Web Client Dashboard can be accessed at the following URL: https://senecaxconnect.com You will need to be onboarded by the xConnect Administration team to access the Web Client Dashboard. This process is initiated by your Seneca account manager Once onboarded, you will be emailed login instructions. When launching the URL, you will be prompted to enter your username and password. This is the account provided by the xConnect Administration team or your account owner.","title":"Gaining Access"},{"location":"Dashboard_Overview/#serverdevice-organizational-hierarchy","text":"The organizational structure of your customers and their respective servers and devices are very important to understand. This organization is integral to simplifying configuration of Events and Alerts and the correct visualization of objects in your dashboard screens. There are 3 levels to the organizational hierarchy: Customer, Gateway, Server/Device","title":"Server/Device Organizational Hierarchy"},{"location":"Dashboard_Overview/#level-1-customer","text":"These are managed and configured via the Manage Customers screen.","title":"Level 1 \u2013 Customer"},{"location":"Dashboard_Overview/#level-2-gateway","text":"These are managed and configured via the Manage Gateways screen and are assigned to a Customer","title":"Level 2 \u2013 Gateway"},{"location":"Dashboard_Overview/#level-3-serverdevice","text":"These are all servers that contain a Server Agent or Devices (connected via integration or added as IP Device) that are successfully submitting telemetry to the platform.","title":"Level 3 \u2013 Server/Device"},{"location":"Dashboard_Overview/#configuration","text":"Additional dashboard and configuration documentation is available within the Usage Guide section of this documentation library.","title":"Configuration"},{"location":"Dashboard_Setup/","text":"Dashboard Setup Once you have set up your gateway and installed the necessary agents, you can access the web dashboard by going to https://senecaxconnect.com Initial Configuration 1. Log in to xConnect by going to https://www.senecaxconnect.com using a modern web browser such as Chrome, Firefox, or Edge. You should have received your login information via e-mail. 2. At login, you will see a left-side navigation that will enable you to navigate through the various pages within xConnect. There are 3 tabs included on the left-side navigation: Tab #1: Home - This tab will list all customers, gateways, servers and subsequent monitored devices that are available in your account. Tab #2: Bookmarks - This tab will list any resources that you have bookmarked. Tab #3: Settings - You can access all management features by using this tab. Please note: only POWER USERS will have access to this tab. End users will not see this tab. 3. Click on the Settings tab ( ) this will show the management menu. 4. Click on \"Manage Customers\", this will allow you to add,remove or update any customers that you would like to see within your portal. 5. Click the \"New Customer\" button, which will allow you to add a new customer to the system. Enter the customer information and click the \"Save\" button: 6. Once you have added one or more customers, click on \"Manage Gateways\", this will take you to the Manage Gateways page that can be leveraged to assign a gateway to a customer. The \"Awaiting Approval\" table shows a list of gateways that have yet to be assigned to a customer. You can assign a gateway by clicking the \"Assign\" button next to your desired gateway: 7. Once you click the \"Assign\" button, a modal will appear and you can choose your desired customer. 8. Once you have approved gateways, you will see the entry added under the assigned customer within the left-side menu. Verify that the appropriate monitored devices are listed under the gateway","title":"Step 3 - Web Dashboard"},{"location":"Dashboard_Setup/#dashboard-setup","text":"Once you have set up your gateway and installed the necessary agents, you can access the web dashboard by going to https://senecaxconnect.com","title":"Dashboard Setup"},{"location":"Dashboard_Setup/#initial-configuration","text":"1. Log in to xConnect by going to https://www.senecaxconnect.com using a modern web browser such as Chrome, Firefox, or Edge. You should have received your login information via e-mail. 2. At login, you will see a left-side navigation that will enable you to navigate through the various pages within xConnect. There are 3 tabs included on the left-side navigation: Tab #1: Home - This tab will list all customers, gateways, servers and subsequent monitored devices that are available in your account. Tab #2: Bookmarks - This tab will list any resources that you have bookmarked. Tab #3: Settings - You can access all management features by using this tab. Please note: only POWER USERS will have access to this tab. End users will not see this tab. 3. Click on the Settings tab ( ) this will show the management menu. 4. Click on \"Manage Customers\", this will allow you to add,remove or update any customers that you would like to see within your portal. 5. Click the \"New Customer\" button, which will allow you to add a new customer to the system. Enter the customer information and click the \"Save\" button: 6. Once you have added one or more customers, click on \"Manage Gateways\", this will take you to the Manage Gateways page that can be leveraged to assign a gateway to a customer. The \"Awaiting Approval\" table shows a list of gateways that have yet to be assigned to a customer. You can assign a gateway by clicking the \"Assign\" button next to your desired gateway: 7. Once you click the \"Assign\" button, a modal will appear and you can choose your desired customer. 8. Once you have approved gateways, you will see the entry added under the assigned customer within the left-side menu. Verify that the appropriate monitored devices are listed under the gateway","title":"Initial Configuration"},{"location":"Gateway_Docker/","text":"Virtual/Software/Docker Gateway Seneca now offers a flexible alternative to the purchase of a turnkey hardware gateway. For customers that wish to use existing infrastructure, whether virtualized or bare metal, the setup of the xConnect Gateway software can be installed with a few easy steps. Minimum Requirements Virtual Machine Hardware 2 vCPU 8GB RAM 60GB of Storage 2 Network Adapters 1 adapter connected to vSwitch of assets being monitored (Agent Network) 1 adapter connected to vSwitch that has outbound internet access (Internet-enabled Network) Software Any Debian-based Linux Distribution (Recommend Ubuntu Server 18.04 LTS or equivalent) Docker.io and Docker-Compose Bare Metal (Physical Device) Hardware Core i3 or greater 8GB RAM 60GB of Storage 2 Network Adapters 1 adapter connected to Switch of assets being monitored (Agent Network) 1 adapter connected to Switch that has outbound internet access (Internet-enabled Network) Software Any Debian-based Linux Distribution (Recommend Ubuntu Server 18.04 LTS or equivalent) Docker.io and Docker-Compose Nano or text editor of choice Installation Open a shell into your Linux installation apt install docker.io docker-compose to install the docker container engine mkdir /etc/xconnect && cd /etc/xconnect git clone https://github.com/senecaxconnect/xconnect_gateway_docker nano gw.env Modify gw.env with the provided API and SecretKey provided by the Seneca xConnect Support Team. Replace the placeholders with the provided keys: SELENE_APIKEY=<APIKEYHERE> SELENE_SECRETKEY=<SECRETKEYHERE> To start the gateway software, execute the following command: MQTT_PORT={Desired MQTT Input Port} GW_NAME={Desired Gateway Name} docker-compose up -d Replace {Desired MQTT Input Port} with 1883 unless otherwise instructed Replace {Desired Gateway Name} with XCGW- some_identifying_name Example: MQTT_PORT=1883 GW_NAME=XCGW-DOCK01 docker-compose up -d","title":"Self-Hosted Docker Container"},{"location":"Gateway_Docker/#virtualsoftwaredocker-gateway","text":"Seneca now offers a flexible alternative to the purchase of a turnkey hardware gateway. For customers that wish to use existing infrastructure, whether virtualized or bare metal, the setup of the xConnect Gateway software can be installed with a few easy steps.","title":"Virtual/Software/Docker Gateway"},{"location":"Gateway_Docker/#minimum-requirements","text":"","title":"Minimum Requirements"},{"location":"Gateway_Docker/#virtual-machine","text":"","title":"Virtual Machine"},{"location":"Gateway_Docker/#hardware","text":"2 vCPU 8GB RAM 60GB of Storage 2 Network Adapters 1 adapter connected to vSwitch of assets being monitored (Agent Network) 1 adapter connected to vSwitch that has outbound internet access (Internet-enabled Network)","title":"Hardware"},{"location":"Gateway_Docker/#software","text":"Any Debian-based Linux Distribution (Recommend Ubuntu Server 18.04 LTS or equivalent) Docker.io and Docker-Compose","title":"Software"},{"location":"Gateway_Docker/#bare-metal-physical-device","text":"","title":"Bare Metal (Physical Device)"},{"location":"Gateway_Docker/#hardware_1","text":"Core i3 or greater 8GB RAM 60GB of Storage 2 Network Adapters 1 adapter connected to Switch of assets being monitored (Agent Network) 1 adapter connected to Switch that has outbound internet access (Internet-enabled Network)","title":"Hardware"},{"location":"Gateway_Docker/#software_1","text":"Any Debian-based Linux Distribution (Recommend Ubuntu Server 18.04 LTS or equivalent) Docker.io and Docker-Compose Nano or text editor of choice","title":"Software"},{"location":"Gateway_Docker/#installation","text":"Open a shell into your Linux installation apt install docker.io docker-compose to install the docker container engine mkdir /etc/xconnect && cd /etc/xconnect git clone https://github.com/senecaxconnect/xconnect_gateway_docker nano gw.env Modify gw.env with the provided API and SecretKey provided by the Seneca xConnect Support Team. Replace the placeholders with the provided keys: SELENE_APIKEY=<APIKEYHERE> SELENE_SECRETKEY=<SECRETKEYHERE> To start the gateway software, execute the following command: MQTT_PORT={Desired MQTT Input Port} GW_NAME={Desired Gateway Name} docker-compose up -d Replace {Desired MQTT Input Port} with 1883 unless otherwise instructed Replace {Desired Gateway Name} with XCGW- some_identifying_name Example: MQTT_PORT=1883 GW_NAME=XCGW-DOCK01 docker-compose up -d","title":"Installation"},{"location":"Gateway_Overview/","text":"Gateway This is a required component of the xConnect Remote Management Platform. This physical or virtual gateway is responsible for being the encrypted tunnel between the Server Agents and the Web Client Dashboard hosted in our cloud. graph LR A(Edge Devices) --> B(Agent) B --> A B -->|MQTT|C(Gateway) C -->|SSL|D(xConnect Cloud Dashboard - Azure); style C fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; There are 4 installation options for this Secure Gateway: - Arrow-hosted Gateway Container (also referred to as vBridge or Virtual Gateway) - Physical (Turnkey) - Virtual Machine - Self-hosted Docker Container Arrow-hosted Gateway Container Arrow offers a fully hosted version of the Secure Gateway software dedicated to your instance. To have this enabled in your subscription, please contact your Account Manager to understand subscription requirements. Once your subscription has been enabled with this capability, adding a new gateway is as simple as a click of a few buttons. Physical (Turnkey) Gateway The physical gateway option greatly reduces setup time. This is a physical hardware device provided by Arrow that has our hardened system image and most configuration details already pre-configured from our factory. The physical gateway highlighted in this guide is an ultra-small form factor embedded PC provided by Arrow. The specifications of this physical gateway are: SYSTEM Manufacturer Seneca\u00ae Operating System Ubuntu Linux 18.04 LTS Server Memory 8GB DDR3L 1600MHz Processor Intel\u00ae Celeron\u00ae N3060 1.6-2.48Ghz 2MB Cache USB 4x USB3.0 (Front), 1x USB2.0 (Front), 2x Micro USB 2.0 (Side) Physical Security 1x Kensington Lock Warranty 3 and 5 Year Warranty Options Available MECHANICALS Thermals 0\u00baC to 35\u00baC / 32\u00baF to 95\u00baF Power Draw 15W Cooling Aluminum Extrusion Chassis Heatsink Mounting VESA/Wall Mountable, Brackets included, Rack shelf available for purchase Dimensions (w x h x d) 7.5 x 1.75 x 4.25 inches / 191 x 46 x 108 millimeters Weight 3 lbs. / 1.4 kg Onboarding/Installation instructions are available in the Getting Started chapter. Virtual Machine Gateway Option The virtual gateway option is available when it is desired to use existing infrastructure to host the Secure Gateway. A Hyper-V Virtual Disk or VMWare OVA can be provided upon request and needs to be imported into the appropriate hypervisor. Note It is recommended to have 2 virtual switches attached to the VM. 1 Virtual Switch with connectivity to your internal LAN assets, and 1 Virtual Switch with Internet connectivity. Professional Services are available to assist configuration of the virtual Secure Gateway on your virtual machines. Onboarding/Installation instructions are available in the \"Getting Started\" chapter. Self-hosted Docker Container We now support deploying an xConnect Gateway image via Docker. This option allows you to have an xConnect Secure Gateway deployed in minutes, granted you can supply a machine that Docker can be installed on. You can use any Linux OS that supports the native Docker engine can be used to deploy the xConnect Gateway container. Other container engines and orchestration tools, like podman and kubernetes, are not currently supported. Container installation instruction files are available on our github page: https://github.com/senecaxconnect/xconnect_gateway_docker Note Docker for Windows is not officially supported, even through WSL. However, you could install a Docker-supported Linux OS within a Hyper-V VM on Windows and it would be fully supported. Installation instructions are also available in the \"Getting Started\" chapter.","title":"Gateway"},{"location":"Gateway_Overview/#gateway","text":"This is a required component of the xConnect Remote Management Platform. This physical or virtual gateway is responsible for being the encrypted tunnel between the Server Agents and the Web Client Dashboard hosted in our cloud. graph LR A(Edge Devices) --> B(Agent) B --> A B -->|MQTT|C(Gateway) C -->|SSL|D(xConnect Cloud Dashboard - Azure); style C fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; There are 4 installation options for this Secure Gateway: - Arrow-hosted Gateway Container (also referred to as vBridge or Virtual Gateway) - Physical (Turnkey) - Virtual Machine - Self-hosted Docker Container","title":"Gateway"},{"location":"Gateway_Overview/#arrow-hosted-gateway-container","text":"Arrow offers a fully hosted version of the Secure Gateway software dedicated to your instance. To have this enabled in your subscription, please contact your Account Manager to understand subscription requirements. Once your subscription has been enabled with this capability, adding a new gateway is as simple as a click of a few buttons.","title":"Arrow-hosted Gateway Container"},{"location":"Gateway_Overview/#physical-turnkey-gateway","text":"The physical gateway option greatly reduces setup time. This is a physical hardware device provided by Arrow that has our hardened system image and most configuration details already pre-configured from our factory. The physical gateway highlighted in this guide is an ultra-small form factor embedded PC provided by Arrow. The specifications of this physical gateway are: SYSTEM Manufacturer Seneca\u00ae Operating System Ubuntu Linux 18.04 LTS Server Memory 8GB DDR3L 1600MHz Processor Intel\u00ae Celeron\u00ae N3060 1.6-2.48Ghz 2MB Cache USB 4x USB3.0 (Front), 1x USB2.0 (Front), 2x Micro USB 2.0 (Side) Physical Security 1x Kensington Lock Warranty 3 and 5 Year Warranty Options Available MECHANICALS Thermals 0\u00baC to 35\u00baC / 32\u00baF to 95\u00baF Power Draw 15W Cooling Aluminum Extrusion Chassis Heatsink Mounting VESA/Wall Mountable, Brackets included, Rack shelf available for purchase Dimensions (w x h x d) 7.5 x 1.75 x 4.25 inches / 191 x 46 x 108 millimeters Weight 3 lbs. / 1.4 kg Onboarding/Installation instructions are available in the Getting Started chapter.","title":"Physical (Turnkey) Gateway"},{"location":"Gateway_Overview/#virtual-machine-gateway-option","text":"The virtual gateway option is available when it is desired to use existing infrastructure to host the Secure Gateway. A Hyper-V Virtual Disk or VMWare OVA can be provided upon request and needs to be imported into the appropriate hypervisor. Note It is recommended to have 2 virtual switches attached to the VM. 1 Virtual Switch with connectivity to your internal LAN assets, and 1 Virtual Switch with Internet connectivity. Professional Services are available to assist configuration of the virtual Secure Gateway on your virtual machines. Onboarding/Installation instructions are available in the \"Getting Started\" chapter.","title":"Virtual Machine Gateway Option"},{"location":"Gateway_Overview/#self-hosted-docker-container","text":"We now support deploying an xConnect Gateway image via Docker. This option allows you to have an xConnect Secure Gateway deployed in minutes, granted you can supply a machine that Docker can be installed on. You can use any Linux OS that supports the native Docker engine can be used to deploy the xConnect Gateway container. Other container engines and orchestration tools, like podman and kubernetes, are not currently supported. Container installation instruction files are available on our github page: https://github.com/senecaxconnect/xconnect_gateway_docker Note Docker for Windows is not officially supported, even through WSL. However, you could install a Docker-supported Linux OS within a Hyper-V VM on Windows and it would be fully supported. Installation instructions are also available in the \"Getting Started\" chapter.","title":"Self-hosted Docker Container"},{"location":"Gateway_TurnKey/","text":"Turnkey Gateway Setup You have 2 connectivity options. Option 1 (Plug and Go) This is the easiest of the 2 options to get up and running quickly. However, this will require a DHCP and internet enabled network connection. Option 2 (Set Static IPs of Gateway) This option should be taken if you would like to assign static IP or IPs to the network ports of the gateway. A PC and an ethernet cable that can connect to the gateway is required for this option. Option 1 - Plug and Go (DHCP/Single Network) With this option you can be up and running in minutes without any special setup steps. However, all agent systems must be on the same network as the gateway. Power on your Secure Gateway Device Connect PORT 2 to an Internet-Enabled DHCP network You are all done! Option 2 - Static IPs (Dual Network) For configuration you will temporarily use an available computer and its web browser. Also, due to security reasons the default password will need to be obtained from our support team by emailing support@senecaxconnect.com Power on your Secure Gateway Device and connect an Ethernet cable from PORT 1 of the Gateway to an Ethernet port on the PC that can be used for configuration. Set a static IP on your PC to 10.0.0.x, where x is anything between 1 and 254 except for 250 Access the gateway portal by going to http://10.0.0.250:8885/ in a web browser from your PC. !!! note (NOTE: 10.0.0.250 is the default IP. If the gateway IP has changed, use the new one instead). Log in to the Gateway with the following credentials: Username: admin Password: support@senecaxconnect.com for password> Click \u201cIP Address Config\u201d on the top menu You can choose to use 1 or 2 NICs on the gateway. Using 2 NICs is recommended for extra security. Single NIC Use: Select Static and Enter the IP Address, Subnet Mask, Gateway, and DNS server(s) for the Primary Network Dual NIC Use (Recommended): Select Static and Enter the IP Address and Subnet Mask only for the Primary Network Select Static and Enter the IP Address, Subnet Mask, Gateway, and DNS server(s) for the Secondary Network Note If you are configuring IP addresses on both NICs, you will need to ensure there is an active network plugged into both NICs. Only NICs that have active connections will appear in the dropdown menu in the IP Address Configuration screen This is an example of the network configuration for Dual NIC Setup: Primary Network - 192.168.1.0/255.255.255.0 Secondary Network - 10.252.13.0/255.255.255.0 graph LR c1-->b1 a1(Internet) b1(Gateway NIC 1<br>192.168.1.200/24) b1---b2 b2(Gateway NIC 2<br>10.252.13.5/24)-->a1 c1(Agent NIC<br>192.168.1.5/24); linkStyle default stroke-width:2px,fill:none,stroke:black; Click \u2018Save\u2019 to finalize the network interface update Wait 1-2 minutes for the gateway to reboot. Verify you can successfully ping the IP address you specified as \u201cprimary\u201d from the same network which your Server Agents will reside","title":"Physical/Turnkey Appliance"},{"location":"Gateway_TurnKey/#turnkey-gateway-setup","text":"You have 2 connectivity options. Option 1 (Plug and Go) This is the easiest of the 2 options to get up and running quickly. However, this will require a DHCP and internet enabled network connection. Option 2 (Set Static IPs of Gateway) This option should be taken if you would like to assign static IP or IPs to the network ports of the gateway. A PC and an ethernet cable that can connect to the gateway is required for this option.","title":"Turnkey Gateway Setup"},{"location":"Gateway_TurnKey/#option-1-plug-and-go-dhcpsingle-network","text":"With this option you can be up and running in minutes without any special setup steps. However, all agent systems must be on the same network as the gateway. Power on your Secure Gateway Device Connect PORT 2 to an Internet-Enabled DHCP network You are all done!","title":"Option 1 - Plug and Go (DHCP/Single Network)"},{"location":"Gateway_TurnKey/#option-2-static-ips-dual-network","text":"For configuration you will temporarily use an available computer and its web browser. Also, due to security reasons the default password will need to be obtained from our support team by emailing support@senecaxconnect.com Power on your Secure Gateway Device and connect an Ethernet cable from PORT 1 of the Gateway to an Ethernet port on the PC that can be used for configuration. Set a static IP on your PC to 10.0.0.x, where x is anything between 1 and 254 except for 250 Access the gateway portal by going to http://10.0.0.250:8885/ in a web browser from your PC. !!! note (NOTE: 10.0.0.250 is the default IP. If the gateway IP has changed, use the new one instead). Log in to the Gateway with the following credentials: Username: admin Password: support@senecaxconnect.com for password> Click \u201cIP Address Config\u201d on the top menu You can choose to use 1 or 2 NICs on the gateway. Using 2 NICs is recommended for extra security. Single NIC Use: Select Static and Enter the IP Address, Subnet Mask, Gateway, and DNS server(s) for the Primary Network Dual NIC Use (Recommended): Select Static and Enter the IP Address and Subnet Mask only for the Primary Network Select Static and Enter the IP Address, Subnet Mask, Gateway, and DNS server(s) for the Secondary Network Note If you are configuring IP addresses on both NICs, you will need to ensure there is an active network plugged into both NICs. Only NICs that have active connections will appear in the dropdown menu in the IP Address Configuration screen This is an example of the network configuration for Dual NIC Setup: Primary Network - 192.168.1.0/255.255.255.0 Secondary Network - 10.252.13.0/255.255.255.0 graph LR c1-->b1 a1(Internet) b1(Gateway NIC 1<br>192.168.1.200/24) b1---b2 b2(Gateway NIC 2<br>10.252.13.5/24)-->a1 c1(Agent NIC<br>192.168.1.5/24); linkStyle default stroke-width:2px,fill:none,stroke:black; Click \u2018Save\u2019 to finalize the network interface update Wait 1-2 minutes for the gateway to reboot. Verify you can successfully ping the IP address you specified as \u201cprimary\u201d from the same network which your Server Agents will reside","title":"Option 2 - Static IPs (Dual Network)"},{"location":"Gateway_Virtual/","text":"Virtual Gateway Setup Once logged in, find the \"Magic Wand\" icon in the top-right menu of your Cloud Dashboard Select 'Virtual Gateway' Name your new gateway and assign it to a customer IMPORTANT- Once the gateway has been created, take note of the gateway address. It is recommended to copy this gateway address and store it for later use On your agent device(s), paste the gateway address into the 'Gateway Address' field in your agent settings Hit Save","title":"Virtual Gateway"},{"location":"Gateway_Virtual/#virtual-gateway-setup","text":"Once logged in, find the \"Magic Wand\" icon in the top-right menu of your Cloud Dashboard Select 'Virtual Gateway' Name your new gateway and assign it to a customer IMPORTANT- Once the gateway has been created, take note of the gateway address. It is recommended to copy this gateway address and store it for later use On your agent device(s), paste the gateway address into the 'Gateway Address' field in your agent settings Hit Save","title":"Virtual Gateway Setup"},{"location":"Getting_Started/","text":"Quick Start Guide This guide is a condensed version of the installation process. Detailed instructions are available for each step of the installation process and can be found within this guide or on the navigation menu. Please follow the steps below in the same order of operations as described: graph LR A(Prerequisites) --> B(Gateway Setup) B -->C(Agent Setup) C -->D(Dashboard Setup); linkStyle default stroke-width:2px,fill:none,stroke:black; Confirm Prerequisites Configure Gateway Configure Agent(s) Configure Dashboard Prerequisites Confirm the following before continuing your xConnect installation and configuration: Network Access has been configured or confirmed against xConnect Network Requirements You've received credentials for the xConnect Web Dashboard ( senecaxconnect.com ) Have a PC that can be used to complete IP address changes to gateway (only required if using Seneca-provided Physical Gateway) Gateway Setup xConnect Guardian Virtual Gateway (Arrow-Hosted) Virtual Gateway Setup Physical/Turnkey Gateway (Seneca-provided) Turnkey Gateway Setup Virtual Machine Gateway (Self-Hosted) Docker Gateway Setup Agent Setup It is recommended to always download the latest version of the Agent. This is available from our download repository here: Download repository Dashboard Setup Once the gateway and agent(s) are installed and configured, you can login to your xConnect Dashboard instance here: Seneca xConnect Cloud Dashboard","title":"Quick Start Guide"},{"location":"Getting_Started/#quick-start-guide","text":"This guide is a condensed version of the installation process. Detailed instructions are available for each step of the installation process and can be found within this guide or on the navigation menu. Please follow the steps below in the same order of operations as described: graph LR A(Prerequisites) --> B(Gateway Setup) B -->C(Agent Setup) C -->D(Dashboard Setup); linkStyle default stroke-width:2px,fill:none,stroke:black; Confirm Prerequisites Configure Gateway Configure Agent(s) Configure Dashboard","title":"Quick Start Guide"},{"location":"Getting_Started/#prerequisites","text":"Confirm the following before continuing your xConnect installation and configuration: Network Access has been configured or confirmed against xConnect Network Requirements You've received credentials for the xConnect Web Dashboard ( senecaxconnect.com ) Have a PC that can be used to complete IP address changes to gateway (only required if using Seneca-provided Physical Gateway)","title":"Prerequisites"},{"location":"Getting_Started/#gateway-setup","text":"","title":"Gateway Setup"},{"location":"Getting_Started/#xconnect-guardian-virtual-gateway-arrow-hosted","text":"Virtual Gateway Setup","title":"xConnect Guardian Virtual Gateway (Arrow-Hosted)"},{"location":"Getting_Started/#physicalturnkey-gateway-seneca-provided","text":"Turnkey Gateway Setup","title":"Physical/Turnkey Gateway (Seneca-provided)"},{"location":"Getting_Started/#virtual-machine-gateway-self-hosted","text":"Docker Gateway Setup","title":"Virtual Machine Gateway (Self-Hosted)"},{"location":"Getting_Started/#agent-setup","text":"It is recommended to always download the latest version of the Agent. This is available from our download repository here: Download repository","title":"Agent Setup"},{"location":"Getting_Started/#dashboard-setup","text":"Once the gateway and agent(s) are installed and configured, you can login to your xConnect Dashboard instance here: Seneca xConnect Cloud Dashboard","title":"Dashboard Setup"},{"location":"Network_Requirements/","text":"Network Requirements The xConnect Agent and Secure Gateway requires very minimal network configuration or firewall rules to be fully functional. Some common industry standard ports that may be required to be open as below based on your use case. Note All rules mentioned below are OUTBOUND only. No Inbound firewall rules required. Topology #1 - Internet Connected Agents This togology applies to: - Agents that have outbound access to *.senecaxconnect.com via protocols mentioned below - Agents connected to an Arrow Hosted Cloud Gateway (AKA vBridge or vGateway) graph LR A(Agent) -->|MQTT - Port Varies|B(Cloud Gateway) A -->|TLS - Port 443|B(Cloud Gateway); style B fill:#04acec; linkStyle default stroke-width:2px,fill:none,stroke:black; Destination Port Protocol Description Devices using this rule 443 TLS API traffic to api.senecaxconnect.com Agent Varies * MQTT over TCP Telemetry/Remote Command handler to hosted gateway at gw.senecaxconnect.com Agent * This port is provided during gateway creation onboarding. If unsure which port is assigned to your gateway, contact support@senecaxconnect.com Topology #2 - Isolated Network Agents This topology applies to: - Agents have access to on-premise Gateway via port 1883 MQTT - On-premise gateway (physical or virtual machine) has outbound access to: - mqtt.senecaxconnect.com (Telemetry Consumer) - assetmgmt-api.senecaxconnect.com (Asset Management API) - api.senecaxconnect.com (xConnect API) graph LR A(Agent) -->|MQTT - 1833|B(On-Premise Gateway) B -->|TLS - Port 443|C(xConnect Cloud Platform); B -->|MQTT - Port 8883|C(xConnect Cloud Platform); style C fill:#04acec; linkStyle default stroke-width:2px,fill:none,stroke:black; Destination Port Protocol Description Devices using this rule 1883 MQTT over TCP For submitting telemetry and listening for remote actions Agent 8883 MQTT (SSL) over TCP Required for access to mqtt.senecaxconnect.com Gateway 443 TLS Required for access to assetmgmt-api.senecaxconnect.com Gateway 443 TLS Required for access to api.senecaxconnect.com Gateway","title":"Network Requirements"},{"location":"Network_Requirements/#network-requirements","text":"The xConnect Agent and Secure Gateway requires very minimal network configuration or firewall rules to be fully functional. Some common industry standard ports that may be required to be open as below based on your use case. Note All rules mentioned below are OUTBOUND only. No Inbound firewall rules required.","title":"Network Requirements"},{"location":"Network_Requirements/#topology-1-internet-connected-agents","text":"This togology applies to: - Agents that have outbound access to *.senecaxconnect.com via protocols mentioned below - Agents connected to an Arrow Hosted Cloud Gateway (AKA vBridge or vGateway) graph LR A(Agent) -->|MQTT - Port Varies|B(Cloud Gateway) A -->|TLS - Port 443|B(Cloud Gateway); style B fill:#04acec; linkStyle default stroke-width:2px,fill:none,stroke:black; Destination Port Protocol Description Devices using this rule 443 TLS API traffic to api.senecaxconnect.com Agent Varies * MQTT over TCP Telemetry/Remote Command handler to hosted gateway at gw.senecaxconnect.com Agent * This port is provided during gateway creation onboarding. If unsure which port is assigned to your gateway, contact support@senecaxconnect.com","title":"Topology #1 - Internet Connected Agents"},{"location":"Network_Requirements/#topology-2-isolated-network-agents","text":"This topology applies to: - Agents have access to on-premise Gateway via port 1883 MQTT - On-premise gateway (physical or virtual machine) has outbound access to: - mqtt.senecaxconnect.com (Telemetry Consumer) - assetmgmt-api.senecaxconnect.com (Asset Management API) - api.senecaxconnect.com (xConnect API) graph LR A(Agent) -->|MQTT - 1833|B(On-Premise Gateway) B -->|TLS - Port 443|C(xConnect Cloud Platform); B -->|MQTT - Port 8883|C(xConnect Cloud Platform); style C fill:#04acec; linkStyle default stroke-width:2px,fill:none,stroke:black; Destination Port Protocol Description Devices using this rule 1883 MQTT over TCP For submitting telemetry and listening for remote actions Agent 8883 MQTT (SSL) over TCP Required for access to mqtt.senecaxconnect.com Gateway 443 TLS Required for access to assetmgmt-api.senecaxconnect.com Gateway 443 TLS Required for access to api.senecaxconnect.com Gateway","title":"Topology #2 - Isolated Network Agents"},{"location":"Platform_Overview/","text":"Feature Overview xConnect Remote Management Platform is the latest enhancement to the already impressive Seneca line of products. xConnect allows you to audit, manage, and maintain all aspects of a enterprise or end-user's network. From edge device monitoring to storage integrity, xConnect puts you in control of your entire environment from a single, intuitive dashboard. xConnect monitors your environment with advanced intelligence, and empowers you to manage and maintain many functions of your installation from a single web-based user interface. While its functionality may be expected to center around the performance monitoring of servers, the application also provides command and control functionality on the device level. This platform is designed with managed service providers in mind to enable intuitive, but powerful, enterprise level management of one or many networks through a single pane of glass. Reduce the amount of service calls and truck rolls by getting in front of issues before your end-user realizes that something has happened. Audit Temperatures, fan speeds, power supplies RAID controllers, physical, logical and virtual storage System utilization Application monitoring Network health Application health Manage Client-less remote desktop Secure tunneling to private networks Access to Out of Band Management (iLO, iDRAC, Generic IPMI) Remote command execution Designed for Service Providers managing multiple sites Act Automatic Remote Command Execution (Self-heal) Mobile Push Notification via 3 rd Party Connector 3 rd Party API Posting Email notifications Platform Overview The xConnect Remote Management Platform consists of three main components each requiring setup and configuration. xConnect Agent xConnect Gateway xConnect Web Dashboard (Cloud) graph LR A(Edge Devices) --> B(Agent) B --> A B -->C(Gateway) C -->D(xConnect Cloud Dashboard - Azure); linkStyle default stroke-width:2px,fill:none,stroke:black; For greenfield projects where servers and gateways have been manufactured by Seneca, this setup and configuration can be simplified by Seneca pre-configuring and pre-installing a majority of this installation. We will explain how to install the xConnect Agent on existing servers, and how to configure it once installed. If purchasing a new server from Seneca, the installation process is not necessary, and you can jump straight to the configuration step. However, it is recommended to always grab the latest version from our download repository Once the xConnect Agents has been installed, your next step is to configure your xConnect Secure Gateway. The Secure Gateway is responsible for providing a seamless encrypted tunnel between Agents and the xConnect Web Client Dashboard. The xConnect Agent resides locally on x86 compute devices discovering sensors and applications. The xConnect Gateway sends real-time data (telemetry) to the xConnect web interface, providing system and device information. In the event of an issue, xConnect can trigger a workflow to immediately notify or react to an issue in the environment. xConnect Agent graph LR A(Edge Devices) --> B(Agent) style B fill:#04acec B --> A B -->C(Gateway) C -->E(xConnect Cloud Management- Azure); linkStyle default stroke-width:2px,fill:none,stroke:black; This is a required component for any compute device that you would like to be monitored by the xConnect Platform. This agent is responsible for collecting health information (also called telemetry) as well as securely facilitating remote management features. The latest version of the Agent installer is available on our downloads repo located at downloads.senecaxconnect.com . The Agent consists of multiple components but are rolled into a single Service, the xConnect Agent Core. Additional technical detail can be found here: xConnect Agent Detail xConnect Gateway graph LR A(Edge Devices) --> B(Agent) B --> A B -->C(Gateway) C -->D(xConnect Cloud Dashboard - Azure); style C fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; This is a required component of the xConnect Remote Management Platform. This physical or virtual gateway is responsible for being the encrypted tunnel between the Agents and the Web Client Dashboard. There are multiple deployment options for this Secure Gateway: Arrow-hosted Gateway (also referred to as vBridge or Virtual Gateway) : This is a Secure Gateway that sits in our cloud and hosted by us. It is generally included in your subscription and can be setup with a few simple steps. Physical (aka Turnkey) : This is a hardware appliance sold by Seneca and with the Secure Gateway software and configured with your subscription already Self-hosted Virtual Machine : Virtual machines can be configured by Seneca to match the features and functionality of our Turnkey appliance with the purchase of professional services. Self-hosted Docker Container : This is a container image (available on Docker Hub) of the xConnect Gateway software that can onboard a gateway in minutes with minimal configuration. Some features (ie. Remote Desktop and Secure Tunneling) are not available without configuration help by Seneca. Additional technical detail can be found here: xConnect Secure Gateway Detail xConnect Web Dashboard graph LR A(Edge Devices) --> B(Agent) B --> A B -->C(Gateway) C -->D(xConnect Cloud Dashboard - Azure); style D fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; The Web Dashboard is hosted by Seneca via Microsoft Azure and is included in the cost of xConnect Remote Management Platform license annual fees. No need to manage your own cloud costs, we take care of that for you! The Web Dashboard can be accessed at senecaxconnect.com You will be provided an account by the xConnect Administration team to access the Web Dashboard. When launching the URL, you will be prompted to enter your username and password. This is the account provided by the xConnect Administration team or your account owner. Additional technical detail can be found here: xConnect Web Dashboard","title":"Overview"},{"location":"Platform_Overview/#feature-overview","text":"xConnect Remote Management Platform is the latest enhancement to the already impressive Seneca line of products. xConnect allows you to audit, manage, and maintain all aspects of a enterprise or end-user's network. From edge device monitoring to storage integrity, xConnect puts you in control of your entire environment from a single, intuitive dashboard. xConnect monitors your environment with advanced intelligence, and empowers you to manage and maintain many functions of your installation from a single web-based user interface. While its functionality may be expected to center around the performance monitoring of servers, the application also provides command and control functionality on the device level. This platform is designed with managed service providers in mind to enable intuitive, but powerful, enterprise level management of one or many networks through a single pane of glass. Reduce the amount of service calls and truck rolls by getting in front of issues before your end-user realizes that something has happened.","title":"Feature Overview"},{"location":"Platform_Overview/#audit","text":"Temperatures, fan speeds, power supplies RAID controllers, physical, logical and virtual storage System utilization Application monitoring Network health Application health","title":"Audit"},{"location":"Platform_Overview/#manage","text":"Client-less remote desktop Secure tunneling to private networks Access to Out of Band Management (iLO, iDRAC, Generic IPMI) Remote command execution Designed for Service Providers managing multiple sites","title":"Manage"},{"location":"Platform_Overview/#act","text":"Automatic Remote Command Execution (Self-heal) Mobile Push Notification via 3 rd Party Connector 3 rd Party API Posting Email notifications","title":"Act"},{"location":"Platform_Overview/#platform-overview","text":"The xConnect Remote Management Platform consists of three main components each requiring setup and configuration. xConnect Agent xConnect Gateway xConnect Web Dashboard (Cloud) graph LR A(Edge Devices) --> B(Agent) B --> A B -->C(Gateway) C -->D(xConnect Cloud Dashboard - Azure); linkStyle default stroke-width:2px,fill:none,stroke:black; For greenfield projects where servers and gateways have been manufactured by Seneca, this setup and configuration can be simplified by Seneca pre-configuring and pre-installing a majority of this installation. We will explain how to install the xConnect Agent on existing servers, and how to configure it once installed. If purchasing a new server from Seneca, the installation process is not necessary, and you can jump straight to the configuration step. However, it is recommended to always grab the latest version from our download repository Once the xConnect Agents has been installed, your next step is to configure your xConnect Secure Gateway. The Secure Gateway is responsible for providing a seamless encrypted tunnel between Agents and the xConnect Web Client Dashboard. The xConnect Agent resides locally on x86 compute devices discovering sensors and applications. The xConnect Gateway sends real-time data (telemetry) to the xConnect web interface, providing system and device information. In the event of an issue, xConnect can trigger a workflow to immediately notify or react to an issue in the environment.","title":"Platform Overview"},{"location":"Platform_Overview/#xconnect-agent","text":"graph LR A(Edge Devices) --> B(Agent) style B fill:#04acec B --> A B -->C(Gateway) C -->E(xConnect Cloud Management- Azure); linkStyle default stroke-width:2px,fill:none,stroke:black; This is a required component for any compute device that you would like to be monitored by the xConnect Platform. This agent is responsible for collecting health information (also called telemetry) as well as securely facilitating remote management features. The latest version of the Agent installer is available on our downloads repo located at downloads.senecaxconnect.com . The Agent consists of multiple components but are rolled into a single Service, the xConnect Agent Core. Additional technical detail can be found here: xConnect Agent Detail","title":"xConnect Agent"},{"location":"Platform_Overview/#xconnect-gateway","text":"graph LR A(Edge Devices) --> B(Agent) B --> A B -->C(Gateway) C -->D(xConnect Cloud Dashboard - Azure); style C fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; This is a required component of the xConnect Remote Management Platform. This physical or virtual gateway is responsible for being the encrypted tunnel between the Agents and the Web Client Dashboard. There are multiple deployment options for this Secure Gateway: Arrow-hosted Gateway (also referred to as vBridge or Virtual Gateway) : This is a Secure Gateway that sits in our cloud and hosted by us. It is generally included in your subscription and can be setup with a few simple steps. Physical (aka Turnkey) : This is a hardware appliance sold by Seneca and with the Secure Gateway software and configured with your subscription already Self-hosted Virtual Machine : Virtual machines can be configured by Seneca to match the features and functionality of our Turnkey appliance with the purchase of professional services. Self-hosted Docker Container : This is a container image (available on Docker Hub) of the xConnect Gateway software that can onboard a gateway in minutes with minimal configuration. Some features (ie. Remote Desktop and Secure Tunneling) are not available without configuration help by Seneca. Additional technical detail can be found here: xConnect Secure Gateway Detail","title":"xConnect Gateway"},{"location":"Platform_Overview/#xconnect-web-dashboard","text":"graph LR A(Edge Devices) --> B(Agent) B --> A B -->C(Gateway) C -->D(xConnect Cloud Dashboard - Azure); style D fill:#04acec linkStyle default stroke-width:2px,fill:none,stroke:black; The Web Dashboard is hosted by Seneca via Microsoft Azure and is included in the cost of xConnect Remote Management Platform license annual fees. No need to manage your own cloud costs, we take care of that for you! The Web Dashboard can be accessed at senecaxconnect.com You will be provided an account by the xConnect Administration team to access the Web Dashboard. When launching the URL, you will be prompted to enter your username and password. This is the account provided by the xConnect Administration team or your account owner. Additional technical detail can be found here: xConnect Web Dashboard","title":"xConnect Web Dashboard"},{"location":"Release_Notes/","text":"xConnect Release Notes xConnect Release Notes Release 2021.08.0: August 23 rd , 2021 Enhancements Bug Fixes Release 2021.06.0: June 30 th , 2021 Enhancements Bug Fixes Release 2021.05.0: May 25 th , 2021 Enhancements Bug fixes Release 2021.04.0: April 26 th , 2021 Enhancements Bug Fixes Minor Release 2021.02.5: March 25 th , 2021 Enhancements Minor Release 2021.02.4: March 10 th , 2021 Enhancements Release 2021.02.0: February 6 th , 2021 Enhancements Bug Fixes Release 2020.12.0: December 17 th , 2020 Enhancements Bug Fixes Release 16.0: December 1 st , 2020 Enhancements How to edit your command: Release 15.0: October 15 th , 2020 Enhancements Bug Fixes Release 14.0: September 7 th , 2020 Enhancements Bug Fixes Release 13.1: July 16 th , 2020 Enhancements Bug Fixes Release 13: June 23 rd , 2020 Enhancements Bug Fixes Release 2021.08.0: August 23 rd , 2021 Enhancements Native remote desktop functionality (BETA) We are now supporting native remote desktop within the xConnect portal for a subset of BETA customers. This requires an enhanced agent to establish the connection to your monitored device. Note: This is not yet available to all xConnect customers. For more information, please contact your account manager. Improvements for batch remote command payloads In an effort to reduce heavy traffic to the virtualized gateways, we've reduced the amount of payloads sent when a batch command is run via the remote commands section. Bug Fixes General cleanup of browser console errors Fixed column headers for manage devices CSV export Improvements to telemetry export Removed the hard refresh of the web page when switching between app instances Release 2021.06.0: June 30 th , 2021 Enhancements Custom event configurations will now show a complete list of impacted devices: Upon clicking the link, a modal will appear listing all impacted devices Bug Fixes Upon disabling a custom event configuration, any outstanding instances of the event will recover: Release 2021.05.0: May 25 th , 2021 Enhancements Significant performance improvement on reporting latest health. Removal of direct queries on database backend, replaced with caching solution. Removal of nested arrays within the remote command and event objects. Improved associations between the commands, events and impacted devices. Bug fixes Fixed erroneous characters found in \"IN\" query criteria (impacts Remote Commands and Custom Event Configurations) Ensure that the login page always renders correctly. Gateway modal will now show the correct labeling when a gateway is offline or online. Release 2021.04.0: April 26 th , 2021 Enhancements Manual remote command executions are now tracked by the user who initiated the command: Remote commands now supports up to 25,000 characters Support for Azure-based Active Directory authentication method. For more information, please see Azure Authentication docs Bug Fixes Ability to search the \"Serial\" field using the \"IN\" operator within the remote commands page: Minor Release 2021.02.5: March 25 th , 2021 Enhancements Added query operator to Remote Commands and Custom Event Configurations There is a new operator that will allow you to pull devices based on a comma-separated list of values. The functionality is currently available in the Remote Commands and Custom Event Configuration editors. By choosing the \"IN\" operator, you can specify one or more values to search. In the example above, I am searching for devices with the names \"SERVER123\", \"SERVER456\", or \"SERVER768\" The result would be 3 servers that match those names. Minor Release 2021.02.4: March 10 th , 2021 Enhancements Enable or disable the ability to batch execute a remote command There is a new control on the remote command edit form that will allow you to enable or disable the ability to execute the remote command on many devices. If the command execution is disabled, you will not be able to hit the \"play\" icon on the remote command grid: Checking the checkbox control will allow you (or any other power user) to perform a batch execution on the command to the associated devices. Release 2021.02.0: February 6 th , 2021 Enhancements Virtual Gateway Onboarding Wizard We have added the ability to create virtual gateways within your xConnect instance! Customers with the cloud gateway subscription will now have the option of generating one or many virtual gateways that will act as a centralized gateway for all of your devices. Upon logging in to a new account with no gateways or devices, the onboarding wizard will automatically appear At any time, you can open the onboarding wizard by clicking the icon in the header: The initial step of the onboarding wizard will enable you to begin onboarding a new Virtual Gateway or will take you to the physical gateway setup documentation. The Virtual Gateway option will be enabled if you have 1 or more available licenses to your account. These licenses can be purchased through your account representative. Clicking the Virtual Gateway icon will take you to step 2 of the wizard, you must enter a unique name for your gateway and choose a customer. Once you have chosen the customer and entered a unique gateway, click the \"Next\" button. The backend processes will begiin allocating your new Virtual Gateway During this time, xConnect is communicating with our cloud-based Docker API instance to spin up a new virtual gateway. If any errors occur you will see it displayed in this window. Upon the gateway progress bar hitting 100%, you will be able to access your virtual gateway via the normal xConnect Manage Gateways interface Once successfully completed, the following message will appear and include the specific URL that you will use on your local agent installations: Use the listed GATEWAY ADDRESS on your local xConnect agents to point them to the Virtual Gateway Configure your local xConnect agents: On your local xConnect agent instance, go to http://localhost:8886/settings and enter the gateway address in the settings page: Automated Device Cleanup We have added an automated device clean up for any devices that have never submitted telemetry and were created over 60 minutes ago. These devices will automatically be removed from your dashboards and side navigation with no manual intervention. Once the device receives telemetry, they will reappear on your xConnect web portal. Device Health Added to Telemetry Report The custom telemetry report now includes the latest health of your devices. Custom Event Configurations Enhanced Filter Disabled custom event configurations will now be hidden from the list. You can show the disabled by clicking the checkbox on the header: Bug Fixes Redundant click when searching for an end user Updating custom events with associated alerts We have added a preventative measure that disallows you from making changes to a custom event configuration if it has active alerts associated with it. As part of a future patch release, we will re-enable this functionality. Release 2020.12.0: December 17 th , 2020 Enhancements Remote Command improvements: Filtering has been added to the remote command execution history grid, which will allow you to filter by device name: On the Remote Command history grid, the device names are now links that will take you to the device-specific dashboard: You can now export the entire execution history of a command as a CSV: Reporting is now available for all power users and can be accessed by the settings menu: Latest device telemetry report is now available for use: You can access this by going to the Reporting page. Click on the \"Telemetry\" link in the list. This will open a modal enabling you to choose 10 or less telemetry points that will be included in the report. The report is a list of all active devices that are filtered by the desired device type. Once your desired settings are selected, click the \"CSV\" button. This will generate the report as a comma separated file and can be opened in your preferred editor. Bug Fixes Sizing fix for the \"Add Customer\" modal when assigning a new gateway. All remote command buttons on dashboards are now hidden for end user roles. Power users can still access them. Copy/paste dashboard URLs are now working correctly. Release 16.0: December 1 st , 2020 Enhancements New user experience for Server and Media Player Dashboards Customizable dashboard reboot button Users may now customize which command is run upon clicking the reboot button on the dashboards. How to edit your command: Go to your desired dashboard via the side menu Click on the reboot button on the information panel. If the menu is plain text, then the admin has not created a default template for you to use yet. If the menu is clickable, you can edit the command by clicking the \"Edit Reboot Command\" link. Added UUID to the device information panels ## Bug Fixes - Fix for defining OR criteria on remote command query definitions. - You may now define two or more OR criteria and retrieve your desired devices correctly. Release 15.0: October 15 th , 2020 Enhancements Enhanced Device Selection with Query Builder The Remote Command and Custom Event Configuration forms have been modified to support dynamic device queries, which will enable users to easily pull one or many devices based on the following criteria: Name UID Device Type (Media Player, Camera, Server, etc...) Model Serial # There is currently no limit on how many filters can be added. NOTE: Any existing custom event configurations or remote commands will have their existing device associations preserved, but you must define a criteria if you edit the command/event. Remote Commands: You can access the remote command form by going to the Settings tab > Remote Commands. Click Create New Command or the existing name of a command in the grid. Custom Event Configurations: You can access custom event configurations by going to the Settings tab > Event Configurations > Custom Configurations Side Menu Paging The side menu now features enhanced pagination controls to ensure fast loading of your dashboards. The # of items displayed is driven by the context menu featured by clicking the button: Choose an item from the \"Items Per Page\" dropdown and the side menu will only show that # of items per page when viewing devices/servers/media players: Global Search We are now supporting global search! You can leverage the side bar search textbox to search across all asset types such as Customers, Gateways, Media Players, Devices, etc... You can perform a search on any dashboard and it will provide you a complete list of matching items. Customizable Event Feed You can now customize how many events you want displayed on all event feed panels: Clicking the gear icon will open a modal enabling you to define how many items you would like displayed on each page: Bug Fixes Name of the device is now driven by the hostname sent via the agent. Clicking on the bookmark tab preserves your current location on the site. Release 14.0: September 7 th , 2020 Enhancements Remote Command Execution Status Support We've added the ability to see the current status of a remote command execution on the device dashboard. Note: in order to see an accurate status, you must update your xConnect agent to version 4040 or later. Remote Command History There is now a complete list of previous executions for a remote command. You can see this by going to Settings > Remote Commands Backend Process Improvements We've implemented several performance improvements on our backend design to ensure the best user experience possible. Bug Fixes Unlocking a user from Manage Users will now clear out prior bad log in attempts. Remote Commands will now fire automatically if assigned to an event. Release 13.1: July 16 th , 2020 Enhancements Alert Summary E-mail Support We've added the ability to group your e-mail alerts together within a standard summary e-mail template. How to Enable : - Log in using your credentials *note: You must be a power user in order to access this functionality - Click on the Settings tab on the left-side menu - Click on \"Global Settings\" - Upon going to the Global Settings page, check the \"Enable Summary Alerting\" checkbox and enter one or more e-mail addresses separated by a comma - Once finished, click the \"Apply\" button Once enabled, you will no longer receive individual e-mail alerts based on your event configurations. A summarized e-mail will be sent that lists the impacted devices and the criteria of the event. Bug Fixes Newly added devices will now automatically be applied with e-mail alerts, remote commands, or third party connectors based on the enabled Global Event Configurations. Release 13: June 23 rd , 2020 Enhancements Event Feed alterations to the navigation links. Modified the way the event feed links navigate a user to the appropriate device dashboard and event log listing. Upon clicking the device name (i.e. Server01) a user will be taken to the device dashboard. Clicking the table icon ( ) will navigate to the filtered event logs for this particular device. Company Abbreviation added to all alerting e-mails Enables xConnect support to easily identify which e-mail alerts originated from a particular xConnect customer. Release version # added to the home page, which links to release notes. Maintenance mode: prevents potential spamming of alerts in the occurrence of a scheduled maintenance window. Enhancement prevents users from logging on during the maintenance. User preferences now preserves your selections for expanding or collapsing panels on your dashboards. Bug Fixes Event logs now include custom outage duration notices instead of default 60 minute outage windows.","title":"Release Notes"},{"location":"Release_Notes/#xconnect-release-notes","text":"xConnect Release Notes Release 2021.08.0: August 23 rd , 2021 Enhancements Bug Fixes Release 2021.06.0: June 30 th , 2021 Enhancements Bug Fixes Release 2021.05.0: May 25 th , 2021 Enhancements Bug fixes Release 2021.04.0: April 26 th , 2021 Enhancements Bug Fixes Minor Release 2021.02.5: March 25 th , 2021 Enhancements Minor Release 2021.02.4: March 10 th , 2021 Enhancements Release 2021.02.0: February 6 th , 2021 Enhancements Bug Fixes Release 2020.12.0: December 17 th , 2020 Enhancements Bug Fixes Release 16.0: December 1 st , 2020 Enhancements How to edit your command: Release 15.0: October 15 th , 2020 Enhancements Bug Fixes Release 14.0: September 7 th , 2020 Enhancements Bug Fixes Release 13.1: July 16 th , 2020 Enhancements Bug Fixes Release 13: June 23 rd , 2020 Enhancements Bug Fixes","title":"xConnect Release Notes"},{"location":"Release_Notes/#release-2021080-august-23rd-2021","text":"","title":"Release 2021.08.0: August 23rd, 2021"},{"location":"Release_Notes/#enhancements","text":"Native remote desktop functionality (BETA) We are now supporting native remote desktop within the xConnect portal for a subset of BETA customers. This requires an enhanced agent to establish the connection to your monitored device. Note: This is not yet available to all xConnect customers. For more information, please contact your account manager. Improvements for batch remote command payloads In an effort to reduce heavy traffic to the virtualized gateways, we've reduced the amount of payloads sent when a batch command is run via the remote commands section.","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes","text":"General cleanup of browser console errors Fixed column headers for manage devices CSV export Improvements to telemetry export Removed the hard refresh of the web page when switching between app instances","title":"Bug Fixes"},{"location":"Release_Notes/#release-2021060-june-30th-2021","text":"","title":"Release 2021.06.0: June 30th, 2021"},{"location":"Release_Notes/#enhancements_1","text":"Custom event configurations will now show a complete list of impacted devices: Upon clicking the link, a modal will appear listing all impacted devices","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_1","text":"Upon disabling a custom event configuration, any outstanding instances of the event will recover:","title":"Bug Fixes"},{"location":"Release_Notes/#release-2021050-may-25th-2021","text":"","title":"Release 2021.05.0: May 25th, 2021"},{"location":"Release_Notes/#enhancements_2","text":"Significant performance improvement on reporting latest health. Removal of direct queries on database backend, replaced with caching solution. Removal of nested arrays within the remote command and event objects. Improved associations between the commands, events and impacted devices.","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_2","text":"Fixed erroneous characters found in \"IN\" query criteria (impacts Remote Commands and Custom Event Configurations) Ensure that the login page always renders correctly. Gateway modal will now show the correct labeling when a gateway is offline or online.","title":"Bug fixes"},{"location":"Release_Notes/#release-2021040-april-26th-2021","text":"","title":"Release 2021.04.0: April 26th, 2021"},{"location":"Release_Notes/#enhancements_3","text":"Manual remote command executions are now tracked by the user who initiated the command: Remote commands now supports up to 25,000 characters Support for Azure-based Active Directory authentication method. For more information, please see Azure Authentication docs","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_3","text":"Ability to search the \"Serial\" field using the \"IN\" operator within the remote commands page:","title":"Bug Fixes"},{"location":"Release_Notes/#minor-release-2021025-march-25th-2021","text":"","title":"Minor Release 2021.02.5: March 25th, 2021"},{"location":"Release_Notes/#enhancements_4","text":"Added query operator to Remote Commands and Custom Event Configurations There is a new operator that will allow you to pull devices based on a comma-separated list of values. The functionality is currently available in the Remote Commands and Custom Event Configuration editors. By choosing the \"IN\" operator, you can specify one or more values to search. In the example above, I am searching for devices with the names \"SERVER123\", \"SERVER456\", or \"SERVER768\" The result would be 3 servers that match those names.","title":"Enhancements"},{"location":"Release_Notes/#minor-release-2021024-march-10th-2021","text":"","title":"Minor Release 2021.02.4: March 10th, 2021"},{"location":"Release_Notes/#enhancements_5","text":"Enable or disable the ability to batch execute a remote command There is a new control on the remote command edit form that will allow you to enable or disable the ability to execute the remote command on many devices. If the command execution is disabled, you will not be able to hit the \"play\" icon on the remote command grid: Checking the checkbox control will allow you (or any other power user) to perform a batch execution on the command to the associated devices.","title":"Enhancements"},{"location":"Release_Notes/#release-2021020-february-6th-2021","text":"","title":"Release 2021.02.0: February 6th, 2021"},{"location":"Release_Notes/#enhancements_6","text":"Virtual Gateway Onboarding Wizard We have added the ability to create virtual gateways within your xConnect instance! Customers with the cloud gateway subscription will now have the option of generating one or many virtual gateways that will act as a centralized gateway for all of your devices. Upon logging in to a new account with no gateways or devices, the onboarding wizard will automatically appear At any time, you can open the onboarding wizard by clicking the icon in the header: The initial step of the onboarding wizard will enable you to begin onboarding a new Virtual Gateway or will take you to the physical gateway setup documentation. The Virtual Gateway option will be enabled if you have 1 or more available licenses to your account. These licenses can be purchased through your account representative. Clicking the Virtual Gateway icon will take you to step 2 of the wizard, you must enter a unique name for your gateway and choose a customer. Once you have chosen the customer and entered a unique gateway, click the \"Next\" button. The backend processes will begiin allocating your new Virtual Gateway During this time, xConnect is communicating with our cloud-based Docker API instance to spin up a new virtual gateway. If any errors occur you will see it displayed in this window. Upon the gateway progress bar hitting 100%, you will be able to access your virtual gateway via the normal xConnect Manage Gateways interface Once successfully completed, the following message will appear and include the specific URL that you will use on your local agent installations: Use the listed GATEWAY ADDRESS on your local xConnect agents to point them to the Virtual Gateway Configure your local xConnect agents: On your local xConnect agent instance, go to http://localhost:8886/settings and enter the gateway address in the settings page: Automated Device Cleanup We have added an automated device clean up for any devices that have never submitted telemetry and were created over 60 minutes ago. These devices will automatically be removed from your dashboards and side navigation with no manual intervention. Once the device receives telemetry, they will reappear on your xConnect web portal. Device Health Added to Telemetry Report The custom telemetry report now includes the latest health of your devices. Custom Event Configurations Enhanced Filter Disabled custom event configurations will now be hidden from the list. You can show the disabled by clicking the checkbox on the header:","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_4","text":"Redundant click when searching for an end user Updating custom events with associated alerts We have added a preventative measure that disallows you from making changes to a custom event configuration if it has active alerts associated with it. As part of a future patch release, we will re-enable this functionality.","title":"Bug Fixes"},{"location":"Release_Notes/#release-2020120-december-17th-2020","text":"","title":"Release 2020.12.0: December 17th, 2020"},{"location":"Release_Notes/#enhancements_7","text":"Remote Command improvements: Filtering has been added to the remote command execution history grid, which will allow you to filter by device name: On the Remote Command history grid, the device names are now links that will take you to the device-specific dashboard: You can now export the entire execution history of a command as a CSV: Reporting is now available for all power users and can be accessed by the settings menu: Latest device telemetry report is now available for use: You can access this by going to the Reporting page. Click on the \"Telemetry\" link in the list. This will open a modal enabling you to choose 10 or less telemetry points that will be included in the report. The report is a list of all active devices that are filtered by the desired device type. Once your desired settings are selected, click the \"CSV\" button. This will generate the report as a comma separated file and can be opened in your preferred editor.","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_5","text":"Sizing fix for the \"Add Customer\" modal when assigning a new gateway. All remote command buttons on dashboards are now hidden for end user roles. Power users can still access them. Copy/paste dashboard URLs are now working correctly.","title":"Bug Fixes"},{"location":"Release_Notes/#release-160-december-1st-2020","text":"","title":"Release 16.0: December 1st, 2020"},{"location":"Release_Notes/#enhancements_8","text":"New user experience for Server and Media Player Dashboards Customizable dashboard reboot button Users may now customize which command is run upon clicking the reboot button on the dashboards.","title":"Enhancements"},{"location":"Release_Notes/#how-to-edit-your-command","text":"Go to your desired dashboard via the side menu Click on the reboot button on the information panel. If the menu is plain text, then the admin has not created a default template for you to use yet. If the menu is clickable, you can edit the command by clicking the \"Edit Reboot Command\" link. Added UUID to the device information panels ## Bug Fixes - Fix for defining OR criteria on remote command query definitions. - You may now define two or more OR criteria and retrieve your desired devices correctly.","title":"How to edit your command:"},{"location":"Release_Notes/#release-150-october-15th-2020","text":"","title":"Release 15.0: October 15th, 2020"},{"location":"Release_Notes/#enhancements_9","text":"Enhanced Device Selection with Query Builder The Remote Command and Custom Event Configuration forms have been modified to support dynamic device queries, which will enable users to easily pull one or many devices based on the following criteria: Name UID Device Type (Media Player, Camera, Server, etc...) Model Serial # There is currently no limit on how many filters can be added. NOTE: Any existing custom event configurations or remote commands will have their existing device associations preserved, but you must define a criteria if you edit the command/event. Remote Commands: You can access the remote command form by going to the Settings tab > Remote Commands. Click Create New Command or the existing name of a command in the grid. Custom Event Configurations: You can access custom event configurations by going to the Settings tab > Event Configurations > Custom Configurations Side Menu Paging The side menu now features enhanced pagination controls to ensure fast loading of your dashboards. The # of items displayed is driven by the context menu featured by clicking the button: Choose an item from the \"Items Per Page\" dropdown and the side menu will only show that # of items per page when viewing devices/servers/media players: Global Search We are now supporting global search! You can leverage the side bar search textbox to search across all asset types such as Customers, Gateways, Media Players, Devices, etc... You can perform a search on any dashboard and it will provide you a complete list of matching items. Customizable Event Feed You can now customize how many events you want displayed on all event feed panels: Clicking the gear icon will open a modal enabling you to define how many items you would like displayed on each page:","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_6","text":"Name of the device is now driven by the hostname sent via the agent. Clicking on the bookmark tab preserves your current location on the site.","title":"Bug Fixes"},{"location":"Release_Notes/#release-140-september-7th-2020","text":"","title":"Release 14.0: September 7th, 2020"},{"location":"Release_Notes/#enhancements_10","text":"Remote Command Execution Status Support We've added the ability to see the current status of a remote command execution on the device dashboard. Note: in order to see an accurate status, you must update your xConnect agent to version 4040 or later. Remote Command History There is now a complete list of previous executions for a remote command. You can see this by going to Settings > Remote Commands Backend Process Improvements We've implemented several performance improvements on our backend design to ensure the best user experience possible.","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_7","text":"Unlocking a user from Manage Users will now clear out prior bad log in attempts. Remote Commands will now fire automatically if assigned to an event.","title":"Bug Fixes"},{"location":"Release_Notes/#release-131-july-16th-2020","text":"","title":"Release 13.1: July 16th, 2020"},{"location":"Release_Notes/#enhancements_11","text":"Alert Summary E-mail Support We've added the ability to group your e-mail alerts together within a standard summary e-mail template. How to Enable : - Log in using your credentials *note: You must be a power user in order to access this functionality - Click on the Settings tab on the left-side menu - Click on \"Global Settings\" - Upon going to the Global Settings page, check the \"Enable Summary Alerting\" checkbox and enter one or more e-mail addresses separated by a comma - Once finished, click the \"Apply\" button Once enabled, you will no longer receive individual e-mail alerts based on your event configurations. A summarized e-mail will be sent that lists the impacted devices and the criteria of the event.","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_8","text":"Newly added devices will now automatically be applied with e-mail alerts, remote commands, or third party connectors based on the enabled Global Event Configurations.","title":"Bug Fixes"},{"location":"Release_Notes/#release-13-june-23rd-2020","text":"","title":"Release 13: June 23rd, 2020"},{"location":"Release_Notes/#enhancements_12","text":"Event Feed alterations to the navigation links. Modified the way the event feed links navigate a user to the appropriate device dashboard and event log listing. Upon clicking the device name (i.e. Server01) a user will be taken to the device dashboard. Clicking the table icon ( ) will navigate to the filtered event logs for this particular device. Company Abbreviation added to all alerting e-mails Enables xConnect support to easily identify which e-mail alerts originated from a particular xConnect customer. Release version # added to the home page, which links to release notes. Maintenance mode: prevents potential spamming of alerts in the occurrence of a scheduled maintenance window. Enhancement prevents users from logging on during the maintenance. User preferences now preserves your selections for expanding or collapsing panels on your dashboards.","title":"Enhancements"},{"location":"Release_Notes/#bug-fixes_9","text":"Event logs now include custom outage duration notices instead of default 60 minute outage windows.","title":"Bug Fixes"},{"location":"Setup_GenetecIntegration/","text":"Genetec - xConnect Integration Preliminary Setup NOTE: You MUST contact Genetec and request that you have the xConnect integration added to your license. Product Part #: GSC-1SDK-SENECA-xConnect SDK Role Creation and Authentication Open the Genetec Config Tool on the server where Genetec has been installed. Go to System > Roles: In order to use the web-based REST API, you must create a \"Web-Based SDK\" role in Genetec via the Configuration Tool. This will allow you to define the port, streaming port, and the base URI of the integration: In the Roles management screen, go to the Web SDK role, click on \"Resources\", this will allow you to define which directory server(s) and archiver(s) will be accessible via the Web SDK. NOTE: The \"Base URI\" field will define the prefix for the URL, based on the config above, the API can be accessed by going to http://localhost:4590/WebSdk/ Once the role is created, define a user for accessing the SDK. Ensure that the user has the role: You can now access the SDK by going to the URL, with BASIC AUTHENTICATION enabled. Use the following for user/pass: Username should be the following format: username;applicationId Our xConnect application Id is: zn3n4f25mfJnxZZtKwpdF27BkdfKlGQsyNlTHtz25Gqxkn71d0JNy1A1PSR281nr password would be the same as the user you setup in Genetec. xConnect Configuration Important Note As of agent version 4069+ the Genetec integration submits telemetry to the xConnect Cloud platform only . You will not see your Genetec cameras pulled in to your LOCAL xConnect agent dashboard. Genetec Configuration Install the xConnect agent on the server running the Genetec directory server or archiver. Once the xConnect agent is installed, go to http://localhost:8886/settings Choose \"Genetec\" as your desired VMS integration, enter the URL for your genetec host (should be http://localhost:4590/WebSdk if using default Base URI and port # ) Enter the username and password. Username will be the login username followed by a semicolon and the app id. (i.e. sdkUser;zn3n4f25mfJnxZZtKwpdF27BkdfKlGQsyNlTHtz25Gqxkn71d0JNy1A1PSR281nr) Click \"Save Changes\" - at this point the agent will begin submitting telemetry driven from your Genetec API to your cloud gateway.","title":"Genetec Integration"},{"location":"Setup_GenetecIntegration/#genetec-xconnect-integration","text":"","title":"Genetec - xConnect Integration"},{"location":"Setup_GenetecIntegration/#preliminary-setup","text":"NOTE: You MUST contact Genetec and request that you have the xConnect integration added to your license. Product Part #: GSC-1SDK-SENECA-xConnect","title":"Preliminary Setup"},{"location":"Setup_GenetecIntegration/#sdk-role-creation-and-authentication","text":"Open the Genetec Config Tool on the server where Genetec has been installed. Go to System > Roles: In order to use the web-based REST API, you must create a \"Web-Based SDK\" role in Genetec via the Configuration Tool. This will allow you to define the port, streaming port, and the base URI of the integration: In the Roles management screen, go to the Web SDK role, click on \"Resources\", this will allow you to define which directory server(s) and archiver(s) will be accessible via the Web SDK. NOTE: The \"Base URI\" field will define the prefix for the URL, based on the config above, the API can be accessed by going to http://localhost:4590/WebSdk/ Once the role is created, define a user for accessing the SDK. Ensure that the user has the role: You can now access the SDK by going to the URL, with BASIC AUTHENTICATION enabled. Use the following for user/pass: Username should be the following format: username;applicationId Our xConnect application Id is: zn3n4f25mfJnxZZtKwpdF27BkdfKlGQsyNlTHtz25Gqxkn71d0JNy1A1PSR281nr password would be the same as the user you setup in Genetec.","title":"SDK Role Creation and Authentication"},{"location":"Setup_GenetecIntegration/#xconnect-configuration","text":"","title":"xConnect Configuration"},{"location":"Setup_GenetecIntegration/#important-note","text":"As of agent version 4069+ the Genetec integration submits telemetry to the xConnect Cloud platform only . You will not see your Genetec cameras pulled in to your LOCAL xConnect agent dashboard.","title":"Important Note"},{"location":"Setup_GenetecIntegration/#genetec-configuration","text":"Install the xConnect agent on the server running the Genetec directory server or archiver. Once the xConnect agent is installed, go to http://localhost:8886/settings Choose \"Genetec\" as your desired VMS integration, enter the URL for your genetec host (should be http://localhost:4590/WebSdk if using default Base URI and port # ) Enter the username and password. Username will be the login username followed by a semicolon and the app id. (i.e. sdkUser;zn3n4f25mfJnxZZtKwpdF27BkdfKlGQsyNlTHtz25Gqxkn71d0JNy1A1PSR281nr) Click \"Save Changes\" - at this point the agent will begin submitting telemetry driven from your Genetec API to your cloud gateway.","title":"Genetec Configuration"},{"location":"Support/","text":"Support Contact our team today by leveraging the many support options available below. Sales Support: If you have a licensing or sales-related inquiry, please contact your assigned account manager or choose from the following contact options below. Web Form: https://www.senecadata.com/contact-us/ Phone: 1.800.227.3432 (Available Mon-Fri 8:00a \u2013 6:00p Eastern) Seneca Technical Support / RMA If your Seneca xConnect software indicates a defective hardware component, gather the following information to include in your support request: System Serial Number Event Logs from your xConnect Account or screenshot of event/alarm Dell TSR Log, if applicable xConnect Agent logs (C:\\ProgramData\\xConnect\\logs) E-mail: Seneca Customer Care Phone: 1.800.227.3432 (Available Mon-Fri 8:00a \u2013 6:00p Eastern) xConnect Application Support E-mail: Seneca xConnect Team","title":"Support"},{"location":"Support/#support","text":"Contact our team today by leveraging the many support options available below.","title":"Support"},{"location":"Support/#sales-support","text":"If you have a licensing or sales-related inquiry, please contact your assigned account manager or choose from the following contact options below. Web Form: https://www.senecadata.com/contact-us/ Phone: 1.800.227.3432 (Available Mon-Fri 8:00a \u2013 6:00p Eastern)","title":"Sales Support:"},{"location":"Support/#seneca-technical-support-rma","text":"If your Seneca xConnect software indicates a defective hardware component, gather the following information to include in your support request: System Serial Number Event Logs from your xConnect Account or screenshot of event/alarm Dell TSR Log, if applicable xConnect Agent logs (C:\\ProgramData\\xConnect\\logs) E-mail: Seneca Customer Care Phone: 1.800.227.3432 (Available Mon-Fri 8:00a \u2013 6:00p Eastern)","title":"Seneca Technical Support / RMA"},{"location":"Support/#xconnect-application-support","text":"E-mail: Seneca xConnect Team","title":"xConnect Application Support"},{"location":"Usage_Bookmarks/","text":"Bookmarks Bookmarks are a marker that can be placed on any customer, gateway, server or device that will make it appear on the Bookmarks menu. This can be completely customized and managed by the power user . Bookmarks are visible across all users of the account, end users cannot remove or add bookmarks. Accessing Bookmarks You can access bookmarks by clicking the bookmark icon on the left-side menu: Once there you will see a complete list of your bookmarked assets. Upon clicking the asset, you will be taken to the appropriate dashboard. Adding or Removing a Bookmark You can add or remove a bookmark by going to left-side menu, and clicking the edit icon Once edit view is active, you will see the bookmark icons listed to the right of the menu items: Clicking the bookmark icon will enable or disable the bookmark. = Disabled bookmark (will not appear on your bookmark list) = Enabled bookmark (will appear on your bookmark list)","title":"Bookmarks"},{"location":"Usage_Bookmarks/#bookmarks","text":"Bookmarks are a marker that can be placed on any customer, gateway, server or device that will make it appear on the Bookmarks menu. This can be completely customized and managed by the power user . Bookmarks are visible across all users of the account, end users cannot remove or add bookmarks.","title":"Bookmarks"},{"location":"Usage_Bookmarks/#accessing-bookmarks","text":"You can access bookmarks by clicking the bookmark icon on the left-side menu: Once there you will see a complete list of your bookmarked assets. Upon clicking the asset, you will be taken to the appropriate dashboard.","title":"Accessing Bookmarks"},{"location":"Usage_Bookmarks/#adding-or-removing-a-bookmark","text":"You can add or remove a bookmark by going to left-side menu, and clicking the edit icon Once edit view is active, you will see the bookmark icons listed to the right of the menu items: Clicking the bookmark icon will enable or disable the bookmark. = Disabled bookmark (will not appear on your bookmark list) = Enabled bookmark (will appear on your bookmark list)","title":"Adding or Removing a Bookmark"},{"location":"Usage_Dashboards/","text":"Dashboards xConnect features intuitive dashboards that enable you to review the current status of your ecosystem across all of your networked edge devices. The web client dashboard can be accessed by going to https://www.senecaxconnect.com You will be provided a master login account and be onboarded by the xConnect Administration team to access the Web Client Dashboard. When launching the URL, you will be prompted to enter your username and password. This is the account provided by the xConnect Administration team or your account owner. The following are summaries of the functionality you can expect in the Web Client Dashboard: Server / Device Organizational Hierarchy Upon logging into the web portal, you will see the primary navigation on the left-hand side that lists all of your available customers, gateways, servers, and devices. This organization is integral to simplifying configuration of Events and Alerts and the correct visualization of objects in your dashboard screens. There are 4 levels to the organizational hierarchy: Customer, Gateway, Servers, and Devices. Clicking into each level will show the child associations and the dashboard: 1. Customers: These are managed and configured via the Manage Customers page. 2. Gateways: Managed via the Manage Gateways page and are assigned to a specific customer. 3. Servers: These are servers that have the xConnect agent running. These are automatically detected when the gateway is connected. 4. IP Devices / Cameras: Cameras that are being detected by the agent via the server. These will show up underneath each server -or- in a separate category on the server menu. Dynamic Dashboards One of the primary pieces of functionality that the client web portal features is the dynamic dashboards that leverage the telemetry information being transmitted from your servers and devices. These dashboards include 4 different levels: 1) Overview Dashboard: Provides a complete view of all gateways, servers and monitored devices. Ensures that you know exactly what's happening throughout your monitored infrastructure. Includes the following panels: - Account Overview: Provides a breakdown of all device types and their health. Each type will be represented by a circular chart. For guidance on how health is defined, please see topic Defining Health Event Feed: Provides a list of events that have been thrown over the last 36 hours. Resources: Provides a list of helpful documentation and downloads. 2) Customer Dashboard: Provides a view of all monitored devices that are being reported from a specific gateway. Customer Overview: Provides a breakdown of all device types and their health for a specific customer . Each type will be represented by a circular chart. For guidance on how health is defined, please see topic Defining Health Event Feed: Provides a list of events that have been thrown over the last 36 hours. Geo-View: Map that shows the location of a customer's gateways. For more information on defining a gateway's location, please see Navigation/Side Menu 3) Gateway Dashboard: Provides a view filtered for a specific gateway's monitored devices. The dashboard widgets are the same as the Customer Dashboard, except filtered to the specific gateway. The Geo-View map is driven by the location of the particular servers. 4) Server/Device Dashboard: The Server/Device specific dashboard provides a detailed view of a server/device's telemetry and events. - Actions / Management Panel (Server only): Provides CPU, Network Utilization and RAM Utilization information, along with management operations such as remote desktop and remote command execution. Device/Camera Information: Provides detailed information about the device/server. System Health (Server Only): Provides the latest telemetry that applies to the system health. Any telemetry key that is prefixed with \"System_\" from the xConnect agent is provided within this panel. Storage Health (Server Only): Provides the latest telemetry information that applies to the storage health. Any telemetry key that is prefixed with \"Storage_\" from the xConnect agent is provided within this panel. Event Feed: Provides a list of events that have been thrown over the last 36 hours. Camera/Device Telemetry (Non-server only) : Provides a list of latest telemetry for a specific device. Defining Health Health is determined by a combination of predefined and custom event configurations. The severity of the event has a direct impact on how the health is determined. Users have control over most of the built-in/predefined events that are part of the xConnect platform. Custom events are completely user-driven and can be modified at any time. How is health determined? If a monitored device has thrown an event that has a severity of ERROR, or CRITICAL, it is considered to be in BAD health. If a monitored device has thrown an event that has a severity of WARNING, then it is considered to be in a WARNING state. Lastly, if the monitored device has thrown an INFORMATIONAL event, or there were no events thrown within the last 36 hours, then that is considered to be in GOOD health Predefined Events There are several events that are built into the platform that are meant to cover common occurrences of what may happen to a monitored ecosystem. These include: 1. Gateway Heartbeat: The gateway heartbeat is driven from the xConnect gateway software and is meant to provide a signal of whether or not the gateway can successfully communicate with the core platform. At a minimum, the gateway must be able to communicate with the platform within 5 minutes. If this is exceeded, the event is considered to be critical to the gateway. Telemetry Received: xConnect expects that all monitored devices will send telemetry within 60 minutes. If there is no telemetry sent for a device beyond 60 minutes, a warning event will be thrown. Recoveries: All events that are thrown (custom or predefined) will receive a RECOVERY event when they go back to normal operating standards. Custom Events Custom events are those that can be modified by a power user via the Event Configuration management page. For more information on the management page, please see Managing Event Configurations topic. There are several types of editable event configurations: 1. Global Events: These are applied to a device type and telemetry point. Some global events are predetermined based on our preset thresholds that we have configured over the development of the xConnect platform. Example: Servers that have a System Thermal CPU 1 Temperature greater than 20C should be in a WARNING state. 2. Custom Events: These can be applied to a specific gateway, server, or device. Example: Throw an error severity event if GATEWAYABC:Server-XYZ has RAM Utilization beyond 80%. 3. Outage Events An outage event is when there is no received telemetry for a device over a specified amount of time. These alerts/events apply to an entire category of monitored assets (i.e. Servers, IP Devices, Cameras, etc...) This is meant to act as an alerting mechanism from the xConnect platform. Additional Notes: By default, xConnect will consider any telemetry outage beyond 60 minutes as a warning event, which will cause your device to be flagged as \"bad\" health. The Outage Event configurations are meant as the alerting mechanism of these occurrences. The alerting mechanism is separate from the built-in telemetry received events. Example: An e-mail should be sent when any server has not sent telemetry for 60 minutes.","title":"Dashboards"},{"location":"Usage_Dashboards/#dashboards","text":"xConnect features intuitive dashboards that enable you to review the current status of your ecosystem across all of your networked edge devices. The web client dashboard can be accessed by going to https://www.senecaxconnect.com You will be provided a master login account and be onboarded by the xConnect Administration team to access the Web Client Dashboard. When launching the URL, you will be prompted to enter your username and password. This is the account provided by the xConnect Administration team or your account owner. The following are summaries of the functionality you can expect in the Web Client Dashboard:","title":"Dashboards"},{"location":"Usage_Dashboards/#server-device-organizational-hierarchy","text":"Upon logging into the web portal, you will see the primary navigation on the left-hand side that lists all of your available customers, gateways, servers, and devices. This organization is integral to simplifying configuration of Events and Alerts and the correct visualization of objects in your dashboard screens. There are 4 levels to the organizational hierarchy: Customer, Gateway, Servers, and Devices. Clicking into each level will show the child associations and the dashboard: 1. Customers: These are managed and configured via the Manage Customers page. 2. Gateways: Managed via the Manage Gateways page and are assigned to a specific customer. 3. Servers: These are servers that have the xConnect agent running. These are automatically detected when the gateway is connected. 4. IP Devices / Cameras: Cameras that are being detected by the agent via the server. These will show up underneath each server -or- in a separate category on the server menu.","title":"Server / Device Organizational Hierarchy"},{"location":"Usage_Dashboards/#dynamic-dashboards","text":"One of the primary pieces of functionality that the client web portal features is the dynamic dashboards that leverage the telemetry information being transmitted from your servers and devices. These dashboards include 4 different levels: 1) Overview Dashboard: Provides a complete view of all gateways, servers and monitored devices. Ensures that you know exactly what's happening throughout your monitored infrastructure. Includes the following panels: - Account Overview: Provides a breakdown of all device types and their health. Each type will be represented by a circular chart. For guidance on how health is defined, please see topic Defining Health Event Feed: Provides a list of events that have been thrown over the last 36 hours. Resources: Provides a list of helpful documentation and downloads. 2) Customer Dashboard: Provides a view of all monitored devices that are being reported from a specific gateway. Customer Overview: Provides a breakdown of all device types and their health for a specific customer . Each type will be represented by a circular chart. For guidance on how health is defined, please see topic Defining Health Event Feed: Provides a list of events that have been thrown over the last 36 hours. Geo-View: Map that shows the location of a customer's gateways. For more information on defining a gateway's location, please see Navigation/Side Menu 3) Gateway Dashboard: Provides a view filtered for a specific gateway's monitored devices. The dashboard widgets are the same as the Customer Dashboard, except filtered to the specific gateway. The Geo-View map is driven by the location of the particular servers. 4) Server/Device Dashboard: The Server/Device specific dashboard provides a detailed view of a server/device's telemetry and events. - Actions / Management Panel (Server only): Provides CPU, Network Utilization and RAM Utilization information, along with management operations such as remote desktop and remote command execution. Device/Camera Information: Provides detailed information about the device/server. System Health (Server Only): Provides the latest telemetry that applies to the system health. Any telemetry key that is prefixed with \"System_\" from the xConnect agent is provided within this panel. Storage Health (Server Only): Provides the latest telemetry information that applies to the storage health. Any telemetry key that is prefixed with \"Storage_\" from the xConnect agent is provided within this panel. Event Feed: Provides a list of events that have been thrown over the last 36 hours. Camera/Device Telemetry (Non-server only) : Provides a list of latest telemetry for a specific device.","title":"Dynamic Dashboards"},{"location":"Usage_Dashboards/#defining-health","text":"Health is determined by a combination of predefined and custom event configurations. The severity of the event has a direct impact on how the health is determined. Users have control over most of the built-in/predefined events that are part of the xConnect platform. Custom events are completely user-driven and can be modified at any time. How is health determined? If a monitored device has thrown an event that has a severity of ERROR, or CRITICAL, it is considered to be in BAD health. If a monitored device has thrown an event that has a severity of WARNING, then it is considered to be in a WARNING state. Lastly, if the monitored device has thrown an INFORMATIONAL event, or there were no events thrown within the last 36 hours, then that is considered to be in GOOD health","title":"Defining Health"},{"location":"Usage_Dashboards/#predefined-events","text":"There are several events that are built into the platform that are meant to cover common occurrences of what may happen to a monitored ecosystem. These include: 1. Gateway Heartbeat: The gateway heartbeat is driven from the xConnect gateway software and is meant to provide a signal of whether or not the gateway can successfully communicate with the core platform. At a minimum, the gateway must be able to communicate with the platform within 5 minutes. If this is exceeded, the event is considered to be critical to the gateway. Telemetry Received: xConnect expects that all monitored devices will send telemetry within 60 minutes. If there is no telemetry sent for a device beyond 60 minutes, a warning event will be thrown. Recoveries: All events that are thrown (custom or predefined) will receive a RECOVERY event when they go back to normal operating standards.","title":"Predefined Events"},{"location":"Usage_Dashboards/#custom-events","text":"Custom events are those that can be modified by a power user via the Event Configuration management page. For more information on the management page, please see Managing Event Configurations topic. There are several types of editable event configurations: 1. Global Events: These are applied to a device type and telemetry point. Some global events are predetermined based on our preset thresholds that we have configured over the development of the xConnect platform. Example: Servers that have a System Thermal CPU 1 Temperature greater than 20C should be in a WARNING state. 2. Custom Events: These can be applied to a specific gateway, server, or device. Example: Throw an error severity event if GATEWAYABC:Server-XYZ has RAM Utilization beyond 80%. 3. Outage Events An outage event is when there is no received telemetry for a device over a specified amount of time. These alerts/events apply to an entire category of monitored assets (i.e. Servers, IP Devices, Cameras, etc...) This is meant to act as an alerting mechanism from the xConnect platform.","title":"Custom Events"},{"location":"Usage_Dashboards/#additional-notes","text":"By default, xConnect will consider any telemetry outage beyond 60 minutes as a warning event, which will cause your device to be flagged as \"bad\" health. The Outage Event configurations are meant as the alerting mechanism of these occurrences. The alerting mechanism is separate from the built-in telemetry received events. Example: An e-mail should be sent when any server has not sent telemetry for 60 minutes.","title":"Additional Notes:"},{"location":"Usage_EventLogs/","text":"Event Logs All events that have been fired on a monitored device can be viewed via the Event Log page. Users can also export the generated logs to a CSV. Accessing Event Logs 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Event Logs\" menu item Exporting Event Logs 1. Click on the export button, this will open the filter modal. 2. Select your desired severity, resource (optional), and date range. Click \"Export to CSV\" and the CSV will be generated.","title":"Event Logs"},{"location":"Usage_EventLogs/#event-logs","text":"All events that have been fired on a monitored device can be viewed via the Event Log page. Users can also export the generated logs to a CSV.","title":"Event Logs"},{"location":"Usage_EventLogs/#accessing-event-logs","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Event Logs\" menu item","title":"Accessing Event Logs"},{"location":"Usage_EventLogs/#exporting-event-logs","text":"1. Click on the export button, this will open the filter modal. 2. Select your desired severity, resource (optional), and date range. Click \"Export to CSV\" and the CSV will be generated.","title":"Exporting Event Logs"},{"location":"Usage_ManageConnectors/","text":"3 rd Party Connectors xConnect supports calls to 3 rd party external RESTful APIs. Click here for more information on REST services. Accessing 3 rd Party Connectors 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"3 rd Party Connectors\" menu item Adding / Updating a 3 rd Party Connector 1. Click on the \"New Connector\" button -or- click on the connector name to update an existing connector. 2. The editor modal will open and enable you to add or modify a connector. Through this editor you can specify your headers, and your body data that will be sent via HTTP POST. 3 rd party connectors currently support a JSON, FORM or XML formatted object. Activating or Disabling a connector 1. Use the checkbox controls on the left-side of the grid to select one or more connectors in the table. 2. Click on Activate or Disable, this will allow you to disable or activate a connector.","title":"3rd Party Connectors"},{"location":"Usage_ManageConnectors/#3rd-party-connectors","text":"xConnect supports calls to 3 rd party external RESTful APIs. Click here for more information on REST services.","title":"3rd Party Connectors"},{"location":"Usage_ManageConnectors/#accessing-3rd-party-connectors","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"3 rd Party Connectors\" menu item","title":"Accessing 3rd Party Connectors"},{"location":"Usage_ManageConnectors/#adding-updating-a-3rd-party-connector","text":"1. Click on the \"New Connector\" button -or- click on the connector name to update an existing connector. 2. The editor modal will open and enable you to add or modify a connector. Through this editor you can specify your headers, and your body data that will be sent via HTTP POST. 3 rd party connectors currently support a JSON, FORM or XML formatted object.","title":"Adding / Updating a 3rd Party Connector"},{"location":"Usage_ManageConnectors/#activating-or-disabling-a-connector","text":"1. Use the checkbox controls on the left-side of the grid to select one or more connectors in the table. 2. Click on Activate or Disable, this will allow you to disable or activate a connector.","title":"Activating or Disabling a connector"},{"location":"Usage_ManageCustomers/","text":"Manage Customers Customers are a way to differentiate your various implementations of xConnect gateways in a meaningful way. The platform supports a Managed Service Provider (MSP) model, which means that a single xConnect instance can have one or more customers that are being maintained. Any customers added will appear in the left-side menu: Note: Only power users will be able to access the functionality listed below. If you are an end user, you will not be able to see the settings menu. Adding or Updating a Customer 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. By default, the manage customers page will appear. If not, you can access it by clicking on \"Manage Customers\" 4. If you are adding a new customer, click on the \"New Customer\" button. If you are updating an existing customer, click on the customer's name. 5. The customer entry modal will appear where you can either modify or add a new customer to the platform. Note: You do not need to change any of the URLs for the images. These features are currently deprecated and will be removed in a future release. Disabling and Reactivating a Customer Disabling a customer will remove them from appearing in the side menu, and will remove the associated gateways from the monitoring dashboards. You can disable a customer by performing the following steps: 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Once on the Manage Customers page, you can select one or more customers via the checkbox on the left. When 1 or more customers are checked, you can click either the \"Activate\" or \"Disable\" button.","title":"Customers"},{"location":"Usage_ManageCustomers/#manage-customers","text":"Customers are a way to differentiate your various implementations of xConnect gateways in a meaningful way. The platform supports a Managed Service Provider (MSP) model, which means that a single xConnect instance can have one or more customers that are being maintained. Any customers added will appear in the left-side menu: Note: Only power users will be able to access the functionality listed below. If you are an end user, you will not be able to see the settings menu.","title":"Manage Customers"},{"location":"Usage_ManageCustomers/#adding-or-updating-a-customer","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. By default, the manage customers page will appear. If not, you can access it by clicking on \"Manage Customers\" 4. If you are adding a new customer, click on the \"New Customer\" button. If you are updating an existing customer, click on the customer's name. 5. The customer entry modal will appear where you can either modify or add a new customer to the platform. Note: You do not need to change any of the URLs for the images. These features are currently deprecated and will be removed in a future release.","title":"Adding or Updating a Customer"},{"location":"Usage_ManageCustomers/#disabling-and-reactivating-a-customer","text":"Disabling a customer will remove them from appearing in the side menu, and will remove the associated gateways from the monitoring dashboards. You can disable a customer by performing the following steps: 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Once on the Manage Customers page, you can select one or more customers via the checkbox on the left. When 1 or more customers are checked, you can click either the \"Activate\" or \"Disable\" button.","title":"Disabling and Reactivating a Customer"},{"location":"Usage_ManageDevices/","text":"Manage Devices The device management page allows you to modify, disable, or remove any IP Device, Camera or generic device that's being monitored by xConnect. Note: you cannot remove a server or gateway from this interface. Accessing Device Management 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Manage Devices\" menu item Updating a Device Name In order to update a device name, click on the name of the device via the grid on the Manage Devices page: Once you have clicked the name, a modal will appear enabling you to enter a different name for the device. This will impact what's displayed in the navigation menu and event logs. Exporting list of devices You can export your complete list of devices to CSV by clicking the export button Removing, Enabling or Disabling Devices You can remove, disable or re-enable a disabled device by using the checkboxes on the left side of the grid and the action buttons on the table header. Removing a device will cause the device and associated telemetry to be removed from the system. Disabling a device will remove the device from the left-side menu and you will no longer receive alerts for that device. Enabling a device will make it appear on the side menu again. NOTE: You will have to set up any custom events/alerts again if this was disabled prior.","title":"Devices"},{"location":"Usage_ManageDevices/#manage-devices","text":"The device management page allows you to modify, disable, or remove any IP Device, Camera or generic device that's being monitored by xConnect. Note: you cannot remove a server or gateway from this interface.","title":"Manage Devices"},{"location":"Usage_ManageDevices/#accessing-device-management","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Manage Devices\" menu item","title":"Accessing Device Management"},{"location":"Usage_ManageDevices/#updating-a-device-name","text":"In order to update a device name, click on the name of the device via the grid on the Manage Devices page: Once you have clicked the name, a modal will appear enabling you to enter a different name for the device. This will impact what's displayed in the navigation menu and event logs.","title":"Updating a Device Name"},{"location":"Usage_ManageDevices/#exporting-list-of-devices","text":"You can export your complete list of devices to CSV by clicking the export button","title":"Exporting list of devices"},{"location":"Usage_ManageDevices/#removing-enabling-or-disabling-devices","text":"You can remove, disable or re-enable a disabled device by using the checkboxes on the left side of the grid and the action buttons on the table header. Removing a device will cause the device and associated telemetry to be removed from the system. Disabling a device will remove the device from the left-side menu and you will no longer receive alerts for that device. Enabling a device will make it appear on the side menu again. NOTE: You will have to set up any custom events/alerts again if this was disabled prior.","title":"Removing, Enabling or Disabling Devices"},{"location":"Usage_ManageEmailProfiles/","text":"Manage E-mail Profiles E-mail profiles are similar to mailing lists for a particular event, which supports one or more recipients and a custom e-mail template. Accessing E-mail Profiles 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Email Profiles\" menu item Defining a new profile 1. Click on \"New Email Profile\" 2. Define an e-mail profile name, and a list of e-mail recipients. Multiple recipients can be separated by a comma (,) 3. Choose an e-mail template using the dropdown. If you require a new template, please see Defining a template Manage E-mail Templates E-mail templates define the content for the e-mails that are sent to the defined profile. Accessing E-mail Templates E-mail templates can be accessed by clicking the \"New Email Profile\" button, and clicking the \"Settings\" link: Defining an E-mail Template You can define one or more e-mail templates that can be leveraged for your alerts. Custom templates provide your users a meaningful e-mail alert that can empower them to take action on a certain alert. 1. Click on the \"New Email Template\" button (or to edit, click on the name of the template) 2. The editor modal will appear and you may define your e-mail template. HTML is supported and you can define dynamic values by leveraging Smart Tags 3. Once you have defined your template, you can associate it to an e-mail profile via the dropdown in the profile editor. Smart Tags Smart tags can be used in any e-mail template, remote command or 3 rd party connector. A smart tag is a dynamic label that is altered based on the device that fired the event. Smart Tag Description {Criteria} Shows the criteria that fired the event. {DeviceHID} Device HID {DeviceName} Name of the device that fired the event. {DeviceUID} Unique ID for a device. {DeviceType} Asset type of the device that fired the event. {Timestamp} Date/time when the event was fired. {FullTelemetry} Full telemetry payload that caused the event to fire. {TelemetryValue} Telemetry value that caused the event to fire. {TelemetryName} Raw telemetry key that caused the event to fire. {TelemetryDescription} Telemetry friendly name that fired the event. {ThresholdValue} Value that the event was comparing against. Defined in the event configuration","title":"Email Profiles"},{"location":"Usage_ManageEmailProfiles/#manage-e-mail-profiles","text":"E-mail profiles are similar to mailing lists for a particular event, which supports one or more recipients and a custom e-mail template.","title":"Manage E-mail Profiles"},{"location":"Usage_ManageEmailProfiles/#accessing-e-mail-profiles","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Email Profiles\" menu item","title":"Accessing E-mail Profiles"},{"location":"Usage_ManageEmailProfiles/#defining-a-new-profile","text":"1. Click on \"New Email Profile\" 2. Define an e-mail profile name, and a list of e-mail recipients. Multiple recipients can be separated by a comma (,) 3. Choose an e-mail template using the dropdown. If you require a new template, please see Defining a template","title":"Defining a new profile"},{"location":"Usage_ManageEmailProfiles/#manage-e-mail-templates","text":"E-mail templates define the content for the e-mails that are sent to the defined profile.","title":"Manage E-mail Templates"},{"location":"Usage_ManageEmailProfiles/#accessing-e-mail-templates","text":"E-mail templates can be accessed by clicking the \"New Email Profile\" button, and clicking the \"Settings\" link:","title":"Accessing E-mail Templates"},{"location":"Usage_ManageEmailProfiles/#defining-an-e-mail-template","text":"You can define one or more e-mail templates that can be leveraged for your alerts. Custom templates provide your users a meaningful e-mail alert that can empower them to take action on a certain alert. 1. Click on the \"New Email Template\" button (or to edit, click on the name of the template) 2. The editor modal will appear and you may define your e-mail template. HTML is supported and you can define dynamic values by leveraging Smart Tags 3. Once you have defined your template, you can associate it to an e-mail profile via the dropdown in the profile editor.","title":"Defining an E-mail Template"},{"location":"Usage_ManageEmailProfiles/#smart-tags","text":"Smart tags can be used in any e-mail template, remote command or 3 rd party connector. A smart tag is a dynamic label that is altered based on the device that fired the event. Smart Tag Description {Criteria} Shows the criteria that fired the event. {DeviceHID} Device HID {DeviceName} Name of the device that fired the event. {DeviceUID} Unique ID for a device. {DeviceType} Asset type of the device that fired the event. {Timestamp} Date/time when the event was fired. {FullTelemetry} Full telemetry payload that caused the event to fire. {TelemetryValue} Telemetry value that caused the event to fire. {TelemetryName} Raw telemetry key that caused the event to fire. {TelemetryDescription} Telemetry friendly name that fired the event. {ThresholdValue} Value that the event was comparing against. Defined in the event configuration","title":"Smart Tags"},{"location":"Usage_ManageEventConfigurations/","text":"Event Configurations Event configurations allow xConnect users to be notified of any abnormality within your monitored devices. There are 3 different types of event configurations: 1. Global Events: These are applied to a device type and telemetry point. Some global events are predetermined based on our preset thresholds that we have configured over the development of the xConnect platform. Example: Servers that have a System Thermal CPU 1 Temperature greater than 20C should be in a WARNING state. 2. Custom Events: These can be applied to a specific gateway, server, or device. Example: Throw an error severity event if GATEWAYABC:Server-XYZ has RAM Utilization beyond 80%. 3. Outage Events An outage event is when there is no received telemetry for a device over a specified amount of time. These alerts/events apply to an entire category of monitored assets (i.e. Servers, IP Devices, Cameras, etc...) This is meant to act as an alerting mechanism from the xConnect platform. Accessing Event Configurations 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Event Configurations\" menu item Global Event Configurations Global event configurations apply to a device type and are automatically defined based on a set of default thresholds that are part of the xConnect platform. All telemetries are considered to be candidates for a global event, but some require additional input. Any global event must have the following information to be used for alerting: Operator Threshold Value Severity Without these fields defined, the \"Requires Input\" flag will be enabled and the event cannot be applied to alerts. Editing Global Events The global event configuration table allows for in-line editing of existing data. You can edit the Friendly Name, Unit, Operator, Threshold or Severity by simply double-clicking the cell: Upon clicking the green check box, the value will be saved and applied. Custom Event Configurations Custom event configurations are those that can be applied to a specific gateway, server or device. These events are completely defined by the Power User. Defining a Custom Event 1. Click on the Custom Configurations tab 2. Click on the \"Create Custom Event\" button 3. The editor modal will appear and you may define your custom event. Select your customer, gateway, and server via the dropdowns Select the specific telemetry you would like to monitor Choose your threshold operator, define a value or range of values Finally, choose the severity Click the \"Create Event Definition\" button, and the event will be added to the system. 4. Once finished with adding the new event, you can apply alerts as needed. See Applying an alert . Outage Configurations Outage configurations apply to scenarios where an asset/device type has not received telemetry in a defined period of time. Example: Alert via e-mail when any server has not sent telemetry in 30 minutes. Defining an outage configuration 1. Click on the Outage Configurations tab 2. Double click on either the No Telemetry or Expiration cells. The No Telemetry (Minutes) column defines how many minutes you would like to wait until a no telemetry event is detected. The Expiration field is how long it will take before another notification/action is executed. Example: Detect when there is no telemetry for 60 minutes and alert me every 24 hours. Once the outage is fully defined, you can apply an alert . Applying an alert An E-mail, Remote Command, or 3 rd Party Connector can be applied to any event configuration by leveraging the action column in the grids. Note: Only events that are fully defined and do not require input can be used for alerting. The number next to each icon indicates how many actions for each category are active for this event. Actions Defined: Dashboard Notifications: determines if the event will appear on the dashboard notifications list. E-mail Alerts: upon this event firing, an e-mail will be generated based on your associated e-mail profile. See Email Profiles for more information. Remote Commands: a command will automatically be executed upon the occurrence of the event. See Remote Commands for more information. Third Party Commands: call to an external REST-based API will be made upon the occurrence of the event. See Third Party Commands Activating an Alert Click the e-mail, connector, or command icon. This will open a modal that features a list of available alerts to apply: Select 1 or more alerts and click the \"Activate Alerts\" button. If you would like to disable alerts, click the \"Disable Alerts\" button. Once this has been done, the alerts will be applied to your event and the alerts will fire upon the occurrence of the event.","title":"Event Configurations"},{"location":"Usage_ManageEventConfigurations/#event-configurations","text":"Event configurations allow xConnect users to be notified of any abnormality within your monitored devices. There are 3 different types of event configurations: 1. Global Events: These are applied to a device type and telemetry point. Some global events are predetermined based on our preset thresholds that we have configured over the development of the xConnect platform. Example: Servers that have a System Thermal CPU 1 Temperature greater than 20C should be in a WARNING state. 2. Custom Events: These can be applied to a specific gateway, server, or device. Example: Throw an error severity event if GATEWAYABC:Server-XYZ has RAM Utilization beyond 80%. 3. Outage Events An outage event is when there is no received telemetry for a device over a specified amount of time. These alerts/events apply to an entire category of monitored assets (i.e. Servers, IP Devices, Cameras, etc...) This is meant to act as an alerting mechanism from the xConnect platform.","title":"Event Configurations"},{"location":"Usage_ManageEventConfigurations/#accessing-event-configurations","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Event Configurations\" menu item","title":"Accessing Event Configurations"},{"location":"Usage_ManageEventConfigurations/#global-event-configurations","text":"Global event configurations apply to a device type and are automatically defined based on a set of default thresholds that are part of the xConnect platform. All telemetries are considered to be candidates for a global event, but some require additional input. Any global event must have the following information to be used for alerting: Operator Threshold Value Severity Without these fields defined, the \"Requires Input\" flag will be enabled and the event cannot be applied to alerts.","title":"Global Event Configurations"},{"location":"Usage_ManageEventConfigurations/#editing-global-events","text":"The global event configuration table allows for in-line editing of existing data. You can edit the Friendly Name, Unit, Operator, Threshold or Severity by simply double-clicking the cell: Upon clicking the green check box, the value will be saved and applied.","title":"Editing Global Events"},{"location":"Usage_ManageEventConfigurations/#custom-event-configurations","text":"Custom event configurations are those that can be applied to a specific gateway, server or device. These events are completely defined by the Power User.","title":"Custom Event Configurations"},{"location":"Usage_ManageEventConfigurations/#defining-a-custom-event","text":"1. Click on the Custom Configurations tab 2. Click on the \"Create Custom Event\" button 3. The editor modal will appear and you may define your custom event. Select your customer, gateway, and server via the dropdowns Select the specific telemetry you would like to monitor Choose your threshold operator, define a value or range of values Finally, choose the severity Click the \"Create Event Definition\" button, and the event will be added to the system. 4. Once finished with adding the new event, you can apply alerts as needed. See Applying an alert .","title":"Defining a Custom Event"},{"location":"Usage_ManageEventConfigurations/#outage-configurations","text":"Outage configurations apply to scenarios where an asset/device type has not received telemetry in a defined period of time. Example: Alert via e-mail when any server has not sent telemetry in 30 minutes.","title":"Outage Configurations"},{"location":"Usage_ManageEventConfigurations/#defining-an-outage-configuration","text":"1. Click on the Outage Configurations tab 2. Double click on either the No Telemetry or Expiration cells. The No Telemetry (Minutes) column defines how many minutes you would like to wait until a no telemetry event is detected. The Expiration field is how long it will take before another notification/action is executed. Example: Detect when there is no telemetry for 60 minutes and alert me every 24 hours. Once the outage is fully defined, you can apply an alert .","title":"Defining an outage configuration"},{"location":"Usage_ManageEventConfigurations/#applying-an-alert","text":"An E-mail, Remote Command, or 3 rd Party Connector can be applied to any event configuration by leveraging the action column in the grids. Note: Only events that are fully defined and do not require input can be used for alerting. The number next to each icon indicates how many actions for each category are active for this event. Actions Defined: Dashboard Notifications: determines if the event will appear on the dashboard notifications list. E-mail Alerts: upon this event firing, an e-mail will be generated based on your associated e-mail profile. See Email Profiles for more information. Remote Commands: a command will automatically be executed upon the occurrence of the event. See Remote Commands for more information. Third Party Commands: call to an external REST-based API will be made upon the occurrence of the event. See Third Party Commands Activating an Alert Click the e-mail, connector, or command icon. This will open a modal that features a list of available alerts to apply: Select 1 or more alerts and click the \"Activate Alerts\" button. If you would like to disable alerts, click the \"Disable Alerts\" button. Once this has been done, the alerts will be applied to your event and the alerts will fire upon the occurrence of the event.","title":"Applying an alert"},{"location":"Usage_ManageGateways/","text":"Manage Gateways Gateways are the primary mechanism for sending information to the xConnect platform. For initial setup and approval process, see Dashboard Setup Accessing Gateway Properties In order to see additional information about an assigned gateway, click on the name of the gateway after you have assigned it to a customer. The modal with gateway information will appear and will allow you to define a description for the gateway and view any associated devices. The \"Edit Gateway\" modal features the list of devices that are being transmitted by the gateway, the MAC address, serial # and assigned customer information. Power Users can define a description to help track gateways.","title":"Gateways"},{"location":"Usage_ManageGateways/#manage-gateways","text":"Gateways are the primary mechanism for sending information to the xConnect platform. For initial setup and approval process, see Dashboard Setup","title":"Manage Gateways"},{"location":"Usage_ManageGateways/#accessing-gateway-properties","text":"In order to see additional information about an assigned gateway, click on the name of the gateway after you have assigned it to a customer. The modal with gateway information will appear and will allow you to define a description for the gateway and view any associated devices. The \"Edit Gateway\" modal features the list of devices that are being transmitted by the gateway, the MAC address, serial # and assigned customer information. Power Users can define a description to help track gateways.","title":"Accessing Gateway Properties"},{"location":"Usage_ManageRemoteCommands/","text":"Remote Commands Remote commands can be executed remotely on a monitored server. These can be leveraged with a particular event and will automatically fire as its reported by the xConnect agent. For more information about applying remote commands to an event, please refer to Event Configurations Accessing Remote Commands 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Remote Commands\" menu item Creating a new command 1. Click on the \"Create New Command\" button 2. The editor modal will appear, you can then define the new command. Select one or more Devices that apply to this command. The selection of these devices will drive what commands are available on the device dashboard. 3. Once you have specified your command name, response code and command lines, click the \"Submit\" button. Updating an existing command 1. Click on the name of the command in the grid, this will open the editor modal. 2. Make your desired changes, click the \"Submit\" button. Activating or Disabling a command 1. Use the checkbox controls on the left-side of the grid to select one or more commands in the table. 2. Click on Activate or Disable, this will allow you to disable or activate a command.","title":"Remote Commands"},{"location":"Usage_ManageRemoteCommands/#remote-commands","text":"Remote commands can be executed remotely on a monitored server. These can be leveraged with a particular event and will automatically fire as its reported by the xConnect agent. For more information about applying remote commands to an event, please refer to Event Configurations","title":"Remote Commands"},{"location":"Usage_ManageRemoteCommands/#accessing-remote-commands","text":"1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on the \"Remote Commands\" menu item","title":"Accessing Remote Commands"},{"location":"Usage_ManageRemoteCommands/#creating-a-new-command","text":"1. Click on the \"Create New Command\" button 2. The editor modal will appear, you can then define the new command. Select one or more Devices that apply to this command. The selection of these devices will drive what commands are available on the device dashboard. 3. Once you have specified your command name, response code and command lines, click the \"Submit\" button.","title":"Creating a new command"},{"location":"Usage_ManageRemoteCommands/#updating-an-existing-command","text":"1. Click on the name of the command in the grid, this will open the editor modal. 2. Make your desired changes, click the \"Submit\" button.","title":"Updating an existing command"},{"location":"Usage_ManageRemoteCommands/#activating-or-disabling-a-command","text":"1. Use the checkbox controls on the left-side of the grid to select one or more commands in the table. 2. Click on Activate or Disable, this will allow you to disable or activate a command.","title":"Activating or Disabling a command"},{"location":"Usage_ManageUsers/","text":"Manage Users Power users have the ability to add, remove or modify existing users on their xConnect instance. End users can be associated with a specific customer which will show that customer's dashboard to the end user upon login. You can access the manage users by going to the settings tab, and clicking \"Manage Users\". Once there you can 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on \"Manage Users\". Once there you will see the primary management interface: All power users will be listed on the Power Users table, any end users will be listed on the End Users section. You can deactivate a user by clicking the \"Deactivate\" button, or activate them by clicking \"Activate\" For more information on the differences between Power and End users, please visit User Types Add a user Click on the \"New User\" button (both buttons will take you to the correct page) Once the User entry modal appears, Enter the following information for your user: User's e-mail (used for login) Password User type (either Power user or End user) Click save. The user will be created and sent an activation e-mail. Once they have confirmed their account, they will be able to access the xConnect portal. Update an existing user 1. Click on the user's name via the grid on the main manage users page: 2. The update modal will appear and allow you to make any changes that you require. Lock Account: This will lock the user's account so they can no longer login until you unlock it. Note: a user can unlock their account if they reset their password. Disable User: Marks the account as disabled. User will not be able to access their account until they are activated.","title":"Users"},{"location":"Usage_ManageUsers/#manage-users","text":"Power users have the ability to add, remove or modify existing users on their xConnect instance. End users can be associated with a specific customer which will show that customer's dashboard to the end user upon login. You can access the manage users by going to the settings tab, and clicking \"Manage Users\". Once there you can 1. Log in as a power user 2. Click on the settings tab on the left-side menu 3. Click on \"Manage Users\". Once there you will see the primary management interface: All power users will be listed on the Power Users table, any end users will be listed on the End Users section. You can deactivate a user by clicking the \"Deactivate\" button, or activate them by clicking \"Activate\" For more information on the differences between Power and End users, please visit User Types","title":"Manage Users"},{"location":"Usage_ManageUsers/#add-a-user","text":"Click on the \"New User\" button (both buttons will take you to the correct page) Once the User entry modal appears, Enter the following information for your user: User's e-mail (used for login) Password User type (either Power user or End user) Click save. The user will be created and sent an activation e-mail. Once they have confirmed their account, they will be able to access the xConnect portal.","title":"Add a user"},{"location":"Usage_ManageUsers/#update-an-existing-user","text":"1. Click on the user's name via the grid on the main manage users page: 2. The update modal will appear and allow you to make any changes that you require. Lock Account: This will lock the user's account so they can no longer login until you unlock it. Note: a user can unlock their account if they reset their password. Disable User: Marks the account as disabled. User will not be able to access their account until they are activated.","title":"Update an existing user"},{"location":"Usage_Roles/","text":"Roles & Permissions xConnect currently supports 2 user roles - Power Users and End Users. User types can be assigned by leveraging the Manage Users interface. Power users have access to the management functionality of the xConnect portal, can modify bookmarks and manage location details for gateways and servers. End users are limited users that have a read only view of the dashboards. Permissions Matrix Permission Power Users End Users Modify Bookmarks View Bookmarks View Overview Dashboard Depends on access View Customer Dashboard View Gateway Dashboard View Server Dashboard View Device Dashboard Manage Logged in User Info Manage Users Manage Customers Manage Gateways Manage Devices Manage Event Configurations Manage Email Profiles Manage Remote Commands Manage 3 rd Party Connectors View Event Logs Only via Event Feed","title":"User Types"},{"location":"Usage_Roles/#roles-permissions","text":"xConnect currently supports 2 user roles - Power Users and End Users. User types can be assigned by leveraging the Manage Users interface. Power users have access to the management functionality of the xConnect portal, can modify bookmarks and manage location details for gateways and servers. End users are limited users that have a read only view of the dashboards.","title":"Roles &amp; Permissions"},{"location":"Usage_Roles/#permissions-matrix","text":"Permission Power Users End Users Modify Bookmarks View Bookmarks View Overview Dashboard Depends on access View Customer Dashboard View Gateway Dashboard View Server Dashboard View Device Dashboard Manage Logged in User Info Manage Users Manage Customers Manage Gateways Manage Devices Manage Event Configurations Manage Email Profiles Manage Remote Commands Manage 3 rd Party Connectors View Event Logs Only via Event Feed","title":"Permissions Matrix"},{"location":"Usage_SideNav/","text":"Side Navigation The primary navigation for xConnect can be found on the left-side of the portal. The side navigation features 3 tabs: 1) Home Tab The home tab is primary tab that allows you to view all of your customers, gateways, servers and devices. This is used to access the various dashboards featured in the portal. You can also modify the location, and names of your resources via the edit mode. Editing a resource In order to activate the edit view on the side menu, click the icon in the lower-right corner of the menu: Edit mode provides additional icons next to each listed customer/resource: Allows you to edit the name of a resource Allows you to mark a resource for bookmark - the resource will be listed on the bookmarks tab. Allows you to define a location for the resource, which will add a pin on the dashboard's Geo-View panel. Specifying a location In edit mode, click the location icon , which will open the location modal. Once the modal appears, enter in the address and click search. This will find your desired address and enable you to set the location. Click \"Set Location\" once the address is found. The resource will now appear on the geo-view. 2) Bookmarks The bookmarks list can be accessed by clicking the star tab on the menu: For more information on the usage of bookmarks, see Bookmarks topic. 3) Settings The settings tab allows you to manage various aspects of the xConnect platform. For more information, please see the Management section.","title":"Navigation"},{"location":"Usage_SideNav/#side-navigation","text":"The primary navigation for xConnect can be found on the left-side of the portal. The side navigation features 3 tabs:","title":"Side Navigation"},{"location":"Usage_SideNav/#1-home-tab","text":"The home tab is primary tab that allows you to view all of your customers, gateways, servers and devices. This is used to access the various dashboards featured in the portal. You can also modify the location, and names of your resources via the edit mode.","title":"1) Home Tab"},{"location":"Usage_SideNav/#editing-a-resource","text":"In order to activate the edit view on the side menu, click the icon in the lower-right corner of the menu: Edit mode provides additional icons next to each listed customer/resource: Allows you to edit the name of a resource Allows you to mark a resource for bookmark - the resource will be listed on the bookmarks tab. Allows you to define a location for the resource, which will add a pin on the dashboard's Geo-View panel.","title":"Editing a resource"},{"location":"Usage_SideNav/#specifying-a-location","text":"In edit mode, click the location icon , which will open the location modal. Once the modal appears, enter in the address and click search. This will find your desired address and enable you to set the location. Click \"Set Location\" once the address is found. The resource will now appear on the geo-view.","title":"Specifying a location"},{"location":"Usage_SideNav/#2-bookmarks","text":"The bookmarks list can be accessed by clicking the star tab on the menu: For more information on the usage of bookmarks, see Bookmarks topic.","title":"2) Bookmarks"},{"location":"Usage_SideNav/#3-settings","text":"The settings tab allows you to manage various aspects of the xConnect platform. For more information, please see the Management section.","title":"3) Settings"}]}